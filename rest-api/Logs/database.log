2023-10-05T15:11:54.604+0300 INFO HV000001: Hibernate Validator 8.0.1.Final
2023-10-05T15:11:54.626+0300 DEBUG Trying to load META-INF/validation.xml for XML based Validator configuration.
2023-10-05T15:11:54.629+0300 DEBUG Trying to load META-INF/validation.xml via TCCL
2023-10-05T15:11:54.631+0300 DEBUG Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2023-10-05T15:11:54.632+0300 DEBUG No META-INF/validation.xml found. Using annotation based configuration only.
2023-10-05T15:11:54.664+0300 DEBUG Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2023-10-05T15:11:54.667+0300 DEBUG Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2023-10-05T15:11:54.733+0300 DEBUG Loaded expression factory via original TCCL
2023-10-05T15:11:55.104+0300 DEBUG HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2023-10-05T15:11:55.122+0300 DEBUG HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2023-10-05T15:11:55.123+0300 DEBUG HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2023-10-05T15:11:55.125+0300 DEBUG HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2023-10-05T15:11:55.126+0300 DEBUG HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2023-10-05T15:11:55.127+0300 DEBUG HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2023-10-05T15:12:03.215+0300 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@110f5e4e
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/home/joe/Desktop/intellij-ws/rest-api/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.joe.restapi.entity.Department]
	Mapping files names []
	Properties []
2023-10-05T15:12:03.245+0300 DEBUG Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-10-05T15:12:03.249+0300 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-10-05T15:12:03.384+0300 INFO HHH000412: Hibernate ORM core version 6.2.9.Final
2023-10-05T15:12:03.387+0300 DEBUG HHH000206: hibernate.properties not found
2023-10-05T15:12:03.390+0300 INFO HHH000406: Using bytecode reflection optimizer
2023-10-05T15:12:03.459+0300 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-10-05T15:12:03.460+0300 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-10-05T15:12:03.462+0300 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-10-05T15:12:03.463+0300 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-10-05T15:12:03.465+0300 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-10-05T15:12:03.468+0300 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-10-05T15:12:03.470+0300 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-10-05T15:12:03.475+0300 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-10-05T15:12:03.477+0300 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-10-05T15:12:03.478+0300 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-10-05T15:12:03.479+0300 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-10-05T15:12:03.482+0300 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-10-05T15:12:03.500+0300 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-10-05T15:12:03.503+0300 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-10-05T15:12:03.787+0300 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@38191c68
2023-10-05T15:12:03.788+0300 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@38191c68
2023-10-05T15:12:03.788+0300 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@38191c68
2023-10-05T15:12:03.789+0300 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7f6edc04
2023-10-05T15:12:03.790+0300 DEBUG Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7f6edc04
2023-10-05T15:12:03.790+0300 DEBUG Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2858f76f
2023-10-05T15:12:03.791+0300 DEBUG Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2858f76f
2023-10-05T15:12:03.791+0300 DEBUG Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1bcc059
2023-10-05T15:12:03.791+0300 DEBUG Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1bcc059
2023-10-05T15:12:03.792+0300 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@7136665a
2023-10-05T15:12:03.792+0300 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@7136665a
2023-10-05T15:12:03.792+0300 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7136665a
2023-10-05T15:12:03.792+0300 DEBUG Adding type registration binary -> org.hibernate.type.BasicTypeReference@78311a84
2023-10-05T15:12:03.792+0300 DEBUG Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@78311a84
2023-10-05T15:12:03.793+0300 DEBUG Adding type registration [B -> org.hibernate.type.BasicTypeReference@78311a84
2023-10-05T15:12:03.793+0300 DEBUG Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@173d6962
2023-10-05T15:12:03.793+0300 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@173d6962
2023-10-05T15:12:03.793+0300 DEBUG Adding type registration image -> org.hibernate.type.BasicTypeReference@7064ddd4
2023-10-05T15:12:03.794+0300 DEBUG Adding type registration blob -> org.hibernate.type.BasicTypeReference@32a27134
2023-10-05T15:12:03.794+0300 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@32a27134
2023-10-05T15:12:03.794+0300 DEBUG Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4237a8de
2023-10-05T15:12:03.794+0300 DEBUG Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3ebdaf83
2023-10-05T15:12:03.794+0300 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@68e14ffd
2023-10-05T15:12:03.794+0300 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@68e14ffd
2023-10-05T15:12:03.795+0300 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@68e14ffd
2023-10-05T15:12:03.795+0300 DEBUG Adding type registration integer -> org.hibernate.type.BasicTypeReference@49ebb804
2023-10-05T15:12:03.795+0300 DEBUG Adding type registration int -> org.hibernate.type.BasicTypeReference@49ebb804
2023-10-05T15:12:03.795+0300 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@49ebb804
2023-10-05T15:12:03.796+0300 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@366598bf
2023-10-05T15:12:03.796+0300 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@366598bf
2023-10-05T15:12:03.796+0300 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@366598bf
2023-10-05T15:12:03.796+0300 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@65f7f847
2023-10-05T15:12:03.796+0300 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@65f7f847
2023-10-05T15:12:03.796+0300 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@65f7f847
2023-10-05T15:12:03.797+0300 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@70bdda3
2023-10-05T15:12:03.797+0300 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@70bdda3
2023-10-05T15:12:03.797+0300 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@70bdda3
2023-10-05T15:12:03.798+0300 DEBUG Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@13347ede
2023-10-05T15:12:03.798+0300 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@13347ede
2023-10-05T15:12:03.798+0300 DEBUG Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@90eac67
2023-10-05T15:12:03.798+0300 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@90eac67
2023-10-05T15:12:03.798+0300 DEBUG Adding type registration character -> org.hibernate.type.BasicTypeReference@536158c1
2023-10-05T15:12:03.798+0300 DEBUG Adding type registration char -> org.hibernate.type.BasicTypeReference@536158c1
2023-10-05T15:12:03.799+0300 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@536158c1
2023-10-05T15:12:03.799+0300 DEBUG Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@a5e71cb
2023-10-05T15:12:03.799+0300 DEBUG Adding type registration string -> org.hibernate.type.BasicTypeReference@3aac2cd0
2023-10-05T15:12:03.800+0300 DEBUG Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3aac2cd0
2023-10-05T15:12:03.800+0300 DEBUG Adding type registration nstring -> org.hibernate.type.BasicTypeReference@46bdc276
2023-10-05T15:12:03.800+0300 DEBUG Adding type registration characters -> org.hibernate.type.BasicTypeReference@1f432d30
2023-10-05T15:12:03.800+0300 DEBUG Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1f432d30
2023-10-05T15:12:03.800+0300 DEBUG Adding type registration [C -> org.hibernate.type.BasicTypeReference@1f432d30
2023-10-05T15:12:03.801+0300 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@66eac73a
2023-10-05T15:12:03.801+0300 DEBUG Adding type registration text -> org.hibernate.type.BasicTypeReference@3dfbbd9b
2023-10-05T15:12:03.801+0300 DEBUG Adding type registration ntext -> org.hibernate.type.BasicTypeReference@157d6620
2023-10-05T15:12:03.801+0300 DEBUG Adding type registration clob -> org.hibernate.type.BasicTypeReference@13d1e312
2023-10-05T15:12:03.802+0300 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@13d1e312
2023-10-05T15:12:03.802+0300 DEBUG Adding type registration nclob -> org.hibernate.type.BasicTypeReference@23b23545
2023-10-05T15:12:03.802+0300 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@23b23545
2023-10-05T15:12:03.802+0300 DEBUG Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@434543cd
2023-10-05T15:12:03.802+0300 DEBUG Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3df771e3
2023-10-05T15:12:03.803+0300 DEBUG Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2122cc3c
2023-10-05T15:12:03.803+0300 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1388cd40
2023-10-05T15:12:03.803+0300 DEBUG Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7a3aafd7
2023-10-05T15:12:03.803+0300 DEBUG Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@7cc4b11a
2023-10-05T15:12:03.804+0300 DEBUG Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4bb0c192
2023-10-05T15:12:03.804+0300 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4bb0c192
2023-10-05T15:12:03.804+0300 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1e87f769
2023-10-05T15:12:03.804+0300 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1e87f769
2023-10-05T15:12:03.804+0300 DEBUG Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@316ca779
2023-10-05T15:12:03.805+0300 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@316ca779
2023-10-05T15:12:03.805+0300 DEBUG Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@68f99c2f
2023-10-05T15:12:03.805+0300 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@68f99c2f
2023-10-05T15:12:03.805+0300 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@25087cf3
2023-10-05T15:12:03.805+0300 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@25087cf3
2023-10-05T15:12:03.806+0300 DEBUG Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@415fb84
2023-10-05T15:12:03.806+0300 DEBUG Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5096c310
2023-10-05T15:12:03.806+0300 DEBUG Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@742a25c9
2023-10-05T15:12:03.806+0300 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@742a25c9
2023-10-05T15:12:03.806+0300 DEBUG Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@12a3205b
2023-10-05T15:12:03.807+0300 DEBUG Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@39c13050
2023-10-05T15:12:03.807+0300 DEBUG Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5f29ea3b
2023-10-05T15:12:03.807+0300 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7a08987a
2023-10-05T15:12:03.807+0300 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7a08987a
2023-10-05T15:12:03.807+0300 DEBUG Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@71a2de98
2023-10-05T15:12:03.808+0300 DEBUG Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4151334c
2023-10-05T15:12:03.808+0300 DEBUG Adding type registration date -> org.hibernate.type.BasicTypeReference@51b9716f
2023-10-05T15:12:03.808+0300 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@51b9716f
2023-10-05T15:12:03.808+0300 DEBUG Adding type registration time -> org.hibernate.type.BasicTypeReference@6fcce86a
2023-10-05T15:12:03.808+0300 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6fcce86a
2023-10-05T15:12:03.809+0300 DEBUG Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@87dad15
2023-10-05T15:12:03.809+0300 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@87dad15
2023-10-05T15:12:03.809+0300 DEBUG Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@87dad15
2023-10-05T15:12:03.809+0300 DEBUG Adding type registration calendar -> org.hibernate.type.BasicTypeReference@407e2405
2023-10-05T15:12:03.809+0300 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@407e2405
2023-10-05T15:12:03.810+0300 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@407e2405
2023-10-05T15:12:03.810+0300 DEBUG Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5a56176c
2023-10-05T15:12:03.811+0300 DEBUG Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@52d12bf4
2023-10-05T15:12:03.811+0300 DEBUG Adding type registration instant -> org.hibernate.type.BasicTypeReference@37a131be
2023-10-05T15:12:03.811+0300 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@37a131be
2023-10-05T15:12:03.812+0300 DEBUG Adding type registration uuid -> org.hibernate.type.BasicTypeReference@64e6543
2023-10-05T15:12:03.812+0300 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@64e6543
2023-10-05T15:12:03.812+0300 DEBUG Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@64e6543
2023-10-05T15:12:03.812+0300 DEBUG Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6c49ef91
2023-10-05T15:12:03.812+0300 DEBUG Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@371ce767
2023-10-05T15:12:03.812+0300 DEBUG Adding type registration class -> org.hibernate.type.BasicTypeReference@90e1cfb
2023-10-05T15:12:03.812+0300 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@90e1cfb
2023-10-05T15:12:03.813+0300 DEBUG Adding type registration currency -> org.hibernate.type.BasicTypeReference@7c9f14e4
2023-10-05T15:12:03.813+0300 DEBUG Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7c9f14e4
2023-10-05T15:12:03.813+0300 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7c9f14e4
2023-10-05T15:12:03.813+0300 DEBUG Adding type registration locale -> org.hibernate.type.BasicTypeReference@5f894981
2023-10-05T15:12:03.814+0300 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5f894981
2023-10-05T15:12:03.814+0300 DEBUG Adding type registration serializable -> org.hibernate.type.BasicTypeReference@ffebac8
2023-10-05T15:12:03.814+0300 DEBUG Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@ffebac8
2023-10-05T15:12:03.814+0300 DEBUG Adding type registration timezone -> org.hibernate.type.BasicTypeReference@76ee9608
2023-10-05T15:12:03.815+0300 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@76ee9608
2023-10-05T15:12:03.815+0300 DEBUG Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@72528405
2023-10-05T15:12:03.815+0300 DEBUG Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@72528405
2023-10-05T15:12:03.815+0300 DEBUG Adding type registration url -> org.hibernate.type.BasicTypeReference@67820e8f
2023-10-05T15:12:03.816+0300 DEBUG Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@67820e8f
2023-10-05T15:12:03.816+0300 DEBUG Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1d50d04d
2023-10-05T15:12:03.832+0300 DEBUG Adding type registration object -> org.hibernate.type.JavaObjectType@40155d09
2023-10-05T15:12:03.832+0300 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@40155d09
2023-10-05T15:12:03.835+0300 DEBUG Adding type registration null -> org.hibernate.type.NullType@73157845
2023-10-05T15:12:03.836+0300 DEBUG Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@59eeab7f
2023-10-05T15:12:03.836+0300 DEBUG Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@f6f1f25
2023-10-05T15:12:03.837+0300 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5de0c725
2023-10-05T15:12:03.837+0300 DEBUG Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5ef4b8c
2023-10-05T15:12:03.837+0300 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@29f6bd1d
2023-10-05T15:12:03.837+0300 DEBUG Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5e971931
2023-10-05T15:12:03.838+0300 DEBUG Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5153429
2023-10-05T15:12:03.838+0300 DEBUG Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7a59bc2c
2023-10-05T15:12:03.850+0300 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@324e53c7] into BootstrapContext; was [null]
2023-10-05T15:12:03.850+0300 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@324e53c7) [was null]
2023-10-05T15:12:03.852+0300 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@5315ead3] into BootstrapContext; was [null]
2023-10-05T15:12:03.852+0300 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5c858300] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2c0e7213]
2023-10-05T15:12:03.894+0300 INFO HHH000021: Bytecode provider name : bytebuddy
2023-10-05T15:12:04.289+0300 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@324e53c7]
2023-10-05T15:12:04.290+0300 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@324e53c7]
2023-10-05T15:12:04.339+0300 DEBUG Database ->
       name : PostgreSQL
    version : 14.9 (Ubuntu 14.9-0ubuntu0.22.04.1)
      major : 14
      minor : 9
2023-10-05T15:12:04.340+0300 DEBUG Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2023-10-05T15:12:04.341+0300 DEBUG JDBC version : 4.2
2023-10-05T15:12:04.432+0300 DEBUG HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$DialectResolutionInfoImpl@548a1aad
2023-10-05T15:12:04.449+0300 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2023-10-05T15:12:04.475+0300 DEBUG HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2023-10-05T15:12:04.495+0300 DEBUG addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@12244882) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7bb22251)
2023-10-05T15:12:04.502+0300 DEBUG addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2023-10-05T15:12:04.502+0300 DEBUG addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-10-05T15:12:04.533+0300 DEBUG Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@3fd9a6a
2023-10-05T15:12:04.533+0300 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3fd9a6a
2023-10-05T15:12:04.534+0300 DEBUG Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@40155d09`
2023-10-05T15:12:04.548+0300 DEBUG Adding type registration Duration -> basicType@1(java.time.Duration,2)
2023-10-05T15:12:04.548+0300 DEBUG Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2023-10-05T15:12:04.561+0300 DEBUG Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2023-10-05T15:12:04.561+0300 DEBUG Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2023-10-05T15:12:04.561+0300 DEBUG Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2023-10-05T15:12:04.561+0300 DEBUG Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2023-10-05T15:12:04.563+0300 DEBUG Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2023-10-05T15:12:04.563+0300 DEBUG Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2023-10-05T15:12:04.566+0300 DEBUG Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2023-10-05T15:12:04.567+0300 DEBUG Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2023-10-05T15:12:04.567+0300 DEBUG Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2023-10-05T15:12:04.572+0300 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4ef56692] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@402e630b]
2023-10-05T15:12:04.692+0300 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-10-05T15:12:04.774+0300 DEBUG Binding entity from annotated class: com.joe.restapi.entity.Department
2023-10-05T15:12:04.808+0300 DEBUG Import with entity name department_restapi_tbl
2023-10-05T15:12:04.830+0300 DEBUG Bind entity com.joe.restapi.entity.Department on table department_restapi_tbl
2023-10-05T15:12:04.859+0300 DEBUG Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-10-05T15:12:04.917+0300 DEBUG Binding column: AnnotatedColumn()
2023-10-05T15:12:04.919+0300 DEBUG Not known whether passed class name [com.joe.restapi.entity.Department] is safe
2023-10-05T15:12:04.920+0300 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.joe.restapi.entity.Department
2023-10-05T15:12:04.939+0300 DEBUG MetadataSourceProcessor property id with lazy=false
2023-10-05T15:12:04.955+0300 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.joe.restapi.entity.Department:id]
2023-10-05T15:12:04.969+0300 DEBUG building BasicValue for id
2023-10-05T15:12:04.999+0300 DEBUG Skipping column re-registration: department_restapi_tbl.id
2023-10-05T15:12:05.002+0300 DEBUG Building property id
2023-10-05T15:12:05.021+0300 DEBUG #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2023-10-05T15:12:05.038+0300 DEBUG Binding column: AnnotatedColumn()
2023-10-05T15:12:05.038+0300 DEBUG MetadataSourceProcessor property departmentAddress with lazy=false
2023-10-05T15:12:05.039+0300 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.joe.restapi.entity.Department:departmentAddress]
2023-10-05T15:12:05.040+0300 DEBUG building BasicValue for departmentAddress
2023-10-05T15:12:05.040+0300 DEBUG Skipping column re-registration: department_restapi_tbl.department_address
2023-10-05T15:12:05.041+0300 DEBUG Building property departmentAddress
2023-10-05T15:12:05.047+0300 DEBUG Binding column: AnnotatedColumn()
2023-10-05T15:12:05.047+0300 DEBUG MetadataSourceProcessor property departmentCode with lazy=false
2023-10-05T15:12:05.048+0300 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.joe.restapi.entity.Department:departmentCode]
2023-10-05T15:12:05.050+0300 DEBUG building BasicValue for departmentCode
2023-10-05T15:12:05.051+0300 DEBUG Skipping column re-registration: department_restapi_tbl.department_code
2023-10-05T15:12:05.051+0300 DEBUG Building property departmentCode
2023-10-05T15:12:05.060+0300 DEBUG Binding column: AnnotatedColumn()
2023-10-05T15:12:05.061+0300 DEBUG MetadataSourceProcessor property departmentName with lazy=false
2023-10-05T15:12:05.061+0300 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.joe.restapi.entity.Department:departmentName]
2023-10-05T15:12:05.061+0300 DEBUG building BasicValue for departmentName
2023-10-05T15:12:05.062+0300 DEBUG Skipping column re-registration: department_restapi_tbl.department_name
2023-10-05T15:12:05.062+0300 DEBUG Building property departmentName
2023-10-05T15:12:05.090+0300 DEBUG Starting `BasicValueBinder#fillSimpleValue` for id
2023-10-05T15:12:05.095+0300 DEBUG Starting `BasicValueBinder#fillSimpleValue` for departmentAddress
2023-10-05T15:12:05.095+0300 DEBUG Starting `BasicValueBinder#fillSimpleValue` for departmentCode
2023-10-05T15:12:05.096+0300 DEBUG Starting `BasicValueBinder#fillSimpleValue` for departmentName
2023-10-05T15:12:05.107+0300 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [department_restapi_tbl]
2023-10-05T15:12:05.241+0300 INFO HHH000021: Bytecode provider name : bytebuddy
2023-10-05T15:12:05.300+0300 DEBUG Building session factory
2023-10-05T15:12:05.432+0300 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-10-05T15:12:05.434+0300 DEBUG Instantiating SessionFactory with settings: {java.specification.version=17, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@25d64d6, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=/home/joe/Desktop/intellij-ws/rest-api/target/classes:/home/joe/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/3.1.4/spring-boot-starter-actuator-3.1.4.jar:/home/joe/.m2/repository/org/springframework/boot/spring-boot-starter/3.1.4/spring-boot-starter-3.1.4.jar:/home/joe/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.1.4/spring-boot-starter-logging-3.1.4.jar:/home/joe/.m2/repository/ch/qos/logback/logback-classic/1.4.11/logback-classic-1.4.11.jar:/home/joe/.m2/repository/ch/qos/logback/logback-core/1.4.11/logback-core-1.4.11.jar:/home/joe/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.20.0/log4j-to-slf4j-2.20.0.jar:/home/joe/.m2/repository/org/apache/logging/log4j/log4j-api/2.20.0/log4j-api-2.20.0.jar:/home/joe/.m2/repository/org/slf4j/jul-to-slf4j/2.0.9/jul-to-slf4j-2.0.9.jar:/home/joe/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/home/joe/.m2/repository/org/yaml/snakeyaml/1.33/snakeyaml-1.33.jar:/home/joe/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/3.1.4/spring-boot-actuator-autoconfigure-3.1.4.jar:/home/joe/.m2/repository/org/springframework/boot/spring-boot-actuator/3.1.4/spring-boot-actuator-3.1.4.jar:/home/joe/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.2/jackson-databind-2.15.2.jar:/home/joe/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.2/jackson-annotations-2.15.2.jar:/home/joe/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.2/jackson-core-2.15.2.jar:/home/joe/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.2/jackson-datatype-jsr310-2.15.2.jar:/home/joe/.m2/repository/io/micrometer/micrometer-observation/1.11.4/micrometer-observation-1.11.4.jar:/home/joe/.m2/repository/io/micrometer/micrometer-commons/1.11.4/micrometer-commons-1.11.4.jar:/home/joe/.m2/repository/io/micrometer/micrometer-core/1.11.4/micrometer-core-1.11.4.jar:/home/joe/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/home/joe/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/home/joe/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.1.4/spring-boot-starter-data-jpa-3.1.4.jar:/home/joe/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.1.4/spring-boot-starter-aop-3.1.4.jar:/home/joe/.m2/repository/org/springframework/spring-aop/6.0.12/spring-aop-6.0.12.jar:/home/joe/.m2/repository/org/aspectj/aspectjweaver/1.9.20/aspectjweaver-1.9.20.jar:/home/joe/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.1.4/spring-boot-starter-jdbc-3.1.4.jar:/home/joe/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/home/joe/.m2/repository/org/springframework/spring-jdbc/6.0.12/spring-jdbc-6.0.12.jar:/home/joe/.m2/repository/org/hibernate/orm/hibernate-core/6.2.9.Final/hibernate-core-6.2.9.Final.jar:/home/joe/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/home/joe/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/home/joe/.m2/repository/org/jboss/logging/jboss-logging/3.5.3.Final/jboss-logging-3.5.3.Final.jar:/home/joe/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/home/joe/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/home/joe/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/home/joe/.m2/repository/net/bytebuddy/byte-buddy/1.14.8/byte-buddy-1.14.8.jar:/home/joe/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.3/jaxb-runtime-4.0.3.jar:/home/joe/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.3/jaxb-core-4.0.3.jar:/home/joe/.m2/repository/org/eclipse/angus/angus-activation/2.0.1/angus-activation-2.0.1.jar:/home/joe/.m2/repository/org/glassfish/jaxb/txw2/4.0.3/txw2-4.0.3.jar:/home/joe/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/home/joe/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/home/joe/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar:/home/joe/.m2/repository/org/springframework/data/spring-data-jpa/3.1.4/spring-data-jpa-3.1.4.jar:/home/joe/.m2/repository/org/springframework/data/spring-data-commons/3.1.4/spring-data-commons-3.1.4.jar:/home/joe/.m2/repository/org/springframework/spring-orm/6.0.12/spring-orm-6.0.12.jar:/home/joe/.m2/repository/org/springframework/spring-context/6.0.12/spring-context-6.0.12.jar:/home/joe/.m2/repository/org/springframework/spring-tx/6.0.12/spring-tx-6.0.12.jar:/home/joe/.m2/repository/org/springframework/spring-beans/6.0.12/spring-beans-6.0.12.jar:/home/joe/.m2/repository/org/slf4j/slf4j-api/2.0.9/slf4j-api-2.0.9.jar:/home/joe/.m2/repository/org/springframework/spring-aspects/6.0.12/spring-aspects-6.0.12.jar:/home/joe/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.1.4/spring-boot-starter-web-3.1.4.jar:/home/joe/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.1.4/spring-boot-starter-json-3.1.4.jar:/home/joe/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.2/jackson-datatype-jdk8-2.15.2.jar:/home/joe/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.2/jackson-module-parameter-names-2.15.2.jar:/home/joe/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.1.4/spring-boot-starter-tomcat-3.1.4.jar:/home/joe/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.13/tomcat-embed-core-10.1.13.jar:/home/joe/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.13/tomcat-embed-websocket-10.1.13.jar:/home/joe/.m2/repository/org/springframework/spring-web/6.0.12/spring-web-6.0.12.jar:/home/joe/.m2/repository/org/springframework/spring-webmvc/6.0.12/spring-webmvc-6.0.12.jar:/home/joe/.m2/repository/org/springframework/spring-expression/6.0.12/spring-expression-6.0.12.jar:/home/joe/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.1.4/spring-boot-starter-validation-3.1.4.jar:/home/joe/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.13/tomcat-embed-el-10.1.13.jar:/home/joe/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.1.Final/hibernate-validator-8.0.1.Final.jar:/home/joe/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/home/joe/.m2/repository/org/postgresql/postgresql/42.6.0/postgresql-42.6.0.jar:/home/joe/.m2/repository/org/checkerframework/checker-qual/3.31.0/checker-qual-3.31.0.jar:/home/joe/.m2/repository/org/springframework/boot/spring-boot-devtools/3.1.4/spring-boot-devtools-3.1.4.jar:/home/joe/.m2/repository/org/springframework/boot/spring-boot/3.1.4/spring-boot-3.1.4.jar:/home/joe/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.1.4/spring-boot-autoconfigure-3.1.4.jar:/home/joe/.m2/repository/com/h2database/h2/2.1.214/h2-2.1.214.jar:/home/joe/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar:/home/joe/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.1/jakarta.xml.bind-api-4.0.1.jar:/home/joe/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/home/joe/.m2/repository/org/springframework/spring-core/6.0.12/spring-core-6.0.12.jar:/home/joe/.m2/repository/org/springframework/spring-jcl/6.0.12/spring-jcl-6.0.12.jar, java.vm.vendor=Private Build, sun.arch.data.model=64, java.vendor.url=Unknown, catalina.useNaming=false, user.timezone=Africa/Nairobi, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Linux, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-17-openjdk-amd64/lib, sun.java.command=com.joe.restapi.RestApiApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@6c243c5b, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=/home/joe, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-08-24, java.home=/usr/lib/jvm/java-17-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.8.1+1-Ubuntu-0ubuntu122.04, user.name=joe, path.separator=:, os.version=6.2.0-34-generic, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=Unknown, java.io.tmpdir=/tmp, com.zaxxer.hikari.pool_number=1, catalina.home=/tmp/tomcat.8081.18372041120839578801, java.version=17.0.8.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=/home/joe/Desktop/intellij-ws/rest-api, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=13081, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=/tmp/tomcat.8081.18372041120839578801, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@11234b33, native.encoding=UTF-8, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Private Build, java.vm.info=mixed mode, sharing, java.vm.version=17.0.8.1+1-Ubuntu-0ubuntu122.04, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0}
2023-10-05T15:12:05.448+0300 DEBUG Session factory constructed with filter configurations : {}
2023-10-05T15:12:05.465+0300 DEBUG Trying to load META-INF/validation.xml for XML based Validator configuration.
2023-10-05T15:12:05.465+0300 DEBUG Trying to load META-INF/validation.xml via TCCL
2023-10-05T15:12:05.466+0300 DEBUG Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2023-10-05T15:12:05.466+0300 DEBUG No META-INF/validation.xml found. Using annotation based configuration only.
2023-10-05T15:12:05.467+0300 DEBUG Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2023-10-05T15:12:05.467+0300 DEBUG Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2023-10-05T15:12:05.468+0300 DEBUG Loaded expression factory via original TCCL
2023-10-05T15:12:05.474+0300 DEBUG HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2023-10-05T15:12:05.476+0300 DEBUG HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2023-10-05T15:12:05.476+0300 DEBUG HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2023-10-05T15:12:05.477+0300 DEBUG HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2023-10-05T15:12:05.477+0300 DEBUG HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2023-10-05T15:12:05.477+0300 DEBUG HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2023-10-05T15:12:05.481+0300 DEBUG Not known whether passed class name [com.joe.restapi.entity.Department] is safe
2023-10-05T15:12:05.481+0300 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.joe.restapi.entity.Department
2023-10-05T15:12:05.607+0300 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-10-05T15:12:05.718+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-10-05T15:12:05.719+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-10-05T15:12:05.721+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-10-05T15:12:05.723+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-10-05T15:12:05.727+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@10c41792] under count; prior registration was null
2023-10-05T15:12:05.731+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5eb9740e] under every; prior registration was null
2023-10-05T15:12:05.732+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2f0fa8f5] under any; prior registration was null
2023-10-05T15:12:05.733+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-10-05T15:12:05.734+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-10-05T15:12:05.734+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-10-05T15:12:05.734+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-10-05T15:12:05.735+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-10-05T15:12:05.735+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-10-05T15:12:05.735+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-10-05T15:12:05.735+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-10-05T15:12:05.736+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-10-05T15:12:05.737+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-10-05T15:12:05.738+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-10-05T15:12:05.739+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-10-05T15:12:05.739+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-10-05T15:12:05.739+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-10-05T15:12:05.740+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-10-05T15:12:05.740+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-10-05T15:12:05.740+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-10-05T15:12:05.747+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@33c2e936] under sinh; prior registration was null
2023-10-05T15:12:05.748+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67c69c87] under cosh; prior registration was null
2023-10-05T15:12:05.748+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@91723bd] under tanh; prior registration was null
2023-10-05T15:12:05.748+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45edf4be] under pi; prior registration was null
2023-10-05T15:12:05.749+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@61423e6c] under log; prior registration was null
2023-10-05T15:12:05.750+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-10-05T15:12:05.751+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-10-05T15:12:05.751+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-10-05T15:12:05.752+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-10-05T15:12:05.752+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-10-05T15:12:05.753+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-10-05T15:12:05.754+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-10-05T15:12:05.754+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-10-05T15:12:05.754+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-10-05T15:12:05.755+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-10-05T15:12:05.755+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-10-05T15:12:05.756+0300 DEBUG Registering alternate key : length -> character_length
2023-10-05T15:12:05.758+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@5e56ccf1] under position; prior registration was null
2023-10-05T15:12:05.764+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@194715a8] under overlay; prior registration was null
2023-10-05T15:12:05.766+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@20a21afc] under trim; prior registration was null
2023-10-05T15:12:05.768+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@37f4a85f] under cast; prior registration was null
2023-10-05T15:12:05.769+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4819118e] under collate; prior registration was null
2023-10-05T15:12:05.771+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@6d7a5b80] under extract; prior registration was null
2023-10-05T15:12:05.771+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-10-05T15:12:05.772+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-10-05T15:12:05.773+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@15f94320] under ifnull; prior registration was null
2023-10-05T15:12:05.773+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-10-05T15:12:05.773+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-10-05T15:12:05.774+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@7fac0ee0] under pad; prior registration was null
2023-10-05T15:12:05.776+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@2bd02503] under str; prior registration was null
2023-10-05T15:12:05.780+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2d8a61c0] under format; prior registration was null
2023-10-05T15:12:05.782+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@1b1f33f0] under timestampadd; prior registration was null
2023-10-05T15:12:05.784+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@24baa4ca] under timestampdiff; prior registration was null
2023-10-05T15:12:05.785+0300 DEBUG Registering alternate key : dateadd -> timestampadd
2023-10-05T15:12:05.785+0300 DEBUG Registering alternate key : datediff -> timestampdiff
2023-10-05T15:12:05.785+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@57bf49f3] under current_date; prior registration was null
2023-10-05T15:12:05.786+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2462ab9a] under current_time; prior registration was null
2023-10-05T15:12:05.786+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@253c5911] under current_timestamp; prior registration was null
2023-10-05T15:12:05.786+0300 DEBUG Registering alternate key : current date -> current_date
2023-10-05T15:12:05.786+0300 DEBUG Registering alternate key : current time -> current_time
2023-10-05T15:12:05.786+0300 DEBUG Registering alternate key : current timestamp -> current_timestamp
2023-10-05T15:12:05.786+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@12f12aac] under local_date; prior registration was null
2023-10-05T15:12:05.786+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3fac09d0] under local_time; prior registration was null
2023-10-05T15:12:05.787+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@ea35bc4] under local_datetime; prior registration was null
2023-10-05T15:12:05.787+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@49106fd0] under offset_datetime; prior registration was null
2023-10-05T15:12:05.787+0300 DEBUG Registering alternate key : local date -> local_date
2023-10-05T15:12:05.787+0300 DEBUG Registering alternate key : local time -> local_time
2023-10-05T15:12:05.787+0300 DEBUG Registering alternate key : local datetime -> local_datetime
2023-10-05T15:12:05.787+0300 DEBUG Registering alternate key : offset datetime -> offset_datetime
2023-10-05T15:12:05.787+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@522f9814] under instant; prior registration was null
2023-10-05T15:12:05.788+0300 DEBUG Registering alternate key : current_instant -> instant
2023-10-05T15:12:05.789+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7d1eb142] under sql; prior registration was null
2023-10-05T15:12:05.789+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-10-05T15:12:05.789+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-10-05T15:12:05.789+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-10-05T15:12:05.789+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@61423e6c
2023-10-05T15:12:05.790+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67dedd50] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2023-10-05T15:12:05.790+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-10-05T15:12:05.790+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@91723bd
2023-10-05T15:12:05.790+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@33c2e936
2023-10-05T15:12:05.790+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67c69c87
2023-10-05T15:12:05.790+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2023-10-05T15:12:05.790+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2023-10-05T15:12:05.790+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2023-10-05T15:12:05.791+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2023-10-05T15:12:05.791+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45edf4be
2023-10-05T15:12:05.791+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-10-05T15:12:05.791+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-10-05T15:12:05.791+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-10-05T15:12:05.792+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2023-10-05T15:12:05.792+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2023-10-05T15:12:05.792+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-10-05T15:12:05.792+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2023-10-05T15:12:05.792+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2023-10-05T15:12:05.792+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2023-10-05T15:12:05.792+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2023-10-05T15:12:05.793+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2023-10-05T15:12:05.793+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2023-10-05T15:12:05.794+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@103d3ef6] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2023-10-05T15:12:05.795+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-10-05T15:12:05.795+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-10-05T15:12:05.795+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@3fac09d0
2023-10-05T15:12:05.795+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@ea35bc4
2023-10-05T15:12:05.797+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@3990cb80] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2023-10-05T15:12:05.797+0300 DEBUG Registering alternate key : length -> character_length
2023-10-05T15:12:05.797+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@14eb365b] under bit_length; prior registration was null
2023-10-05T15:12:05.797+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@26ad3ef3] under octet_length; prior registration was null
2023-10-05T15:12:05.797+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-10-05T15:12:05.798+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2023-10-05T15:12:05.798+0300 DEBUG Registering alternate key : char -> chr
2023-10-05T15:12:05.798+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7a6d412d] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@5e56ccf1
2023-10-05T15:12:05.798+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@459e492b] under bitand; prior registration was null
2023-10-05T15:12:05.798+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@88af62d] under bitor; prior registration was null
2023-10-05T15:12:05.799+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@479f0b69] under bitxor; prior registration was null
2023-10-05T15:12:05.799+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@57eb4e9e] under bitnot; prior registration was null
2023-10-05T15:12:05.799+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-10-05T15:12:05.799+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-10-05T15:12:05.800+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2023-10-05T15:12:05.800+0300 DEBUG Registering alternate key : every -> bool_and
2023-10-05T15:12:05.800+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2023-10-05T15:12:05.800+0300 DEBUG Registering alternate key : any -> bool_or
2023-10-05T15:12:05.801+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@608b8259] under median; prior registration was null
2023-10-05T15:12:05.801+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2023-10-05T15:12:05.801+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-10-05T15:12:05.801+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-10-05T15:12:05.802+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2023-10-05T15:12:05.802+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-10-05T15:12:05.802+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-10-05T15:12:05.802+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2023-10-05T15:12:05.802+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2023-10-05T15:12:05.803+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2023-10-05T15:12:05.804+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2023-10-05T15:12:05.804+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2023-10-05T15:12:05.804+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2023-10-05T15:12:05.805+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2023-10-05T15:12:05.805+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2023-10-05T15:12:05.805+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2023-10-05T15:12:05.805+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2023-10-05T15:12:05.805+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2023-10-05T15:12:05.805+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2023-10-05T15:12:05.806+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@94ab2c] under insert; prior registration was null
2023-10-05T15:12:05.807+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@52bd958c] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@194715a8
2023-10-05T15:12:05.807+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-10-05T15:12:05.807+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6bd2a3bf] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2023-10-05T15:12:05.807+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-10-05T15:12:05.809+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-10-05T15:12:05.809+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-10-05T15:12:05.809+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-10-05T15:12:05.810+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-10-05T15:12:05.810+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-10-05T15:12:05.812+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@21538b67] under listagg; prior registration was null
2023-10-05T15:12:05.812+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2023-10-05T15:12:05.813+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2023-10-05T15:12:05.813+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2023-10-05T15:12:05.813+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2023-10-05T15:12:05.816+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@9b9a13d] under mode; prior registration was null
2023-10-05T15:12:05.816+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@13fce393] under percentile_cont; prior registration was null
2023-10-05T15:12:05.816+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@1901f125] under percentile_disc; prior registration was null
2023-10-05T15:12:05.817+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1103e422] under rank; prior registration was null
2023-10-05T15:12:05.818+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@485ed51a] under dense_rank; prior registration was null
2023-10-05T15:12:05.818+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@72685035] under percent_rank; prior registration was null
2023-10-05T15:12:05.818+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@18b63798] under cume_dist; prior registration was null
2023-10-05T15:12:05.819+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@31a8f92d] under min; prior registration was NamedSqmFunctionTemplate(min)
2023-10-05T15:12:05.820+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@70e15572] under max; prior registration was NamedSqmFunctionTemplate(max)
2023-10-05T15:12:05.821+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@4c170de] under round; prior registration was NamedSqmFunctionTemplate(round)
2023-10-05T15:12:05.825+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@71e65b4a] under trunc; prior registration was null
2023-10-05T15:12:05.825+0300 DEBUG Registering alternate key : truncate -> trunc
2023-10-05T15:12:05.826+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@32683954] under date_trunc; prior registration was null
2023-10-05T15:12:05.829+0300 DEBUG abs(NUMERIC arg)
2023-10-05T15:12:05.830+0300 DEBUG Double acos(NUMERIC arg)
2023-10-05T15:12:05.830+0300 DEBUG Double acosh(NUMERIC arg)
2023-10-05T15:12:05.830+0300 DEBUG Boolean any(BOOLEAN predicate)
2023-10-05T15:12:05.830+0300 DEBUG Integer ascii(STRING arg)
2023-10-05T15:12:05.831+0300 DEBUG Double asin(NUMERIC arg)
2023-10-05T15:12:05.831+0300 DEBUG Double asinh(NUMERIC arg)
2023-10-05T15:12:05.831+0300 DEBUG Double atan(NUMERIC arg)
2023-10-05T15:12:05.831+0300 DEBUG Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-10-05T15:12:05.832+0300 DEBUG Double atanh(NUMERIC arg)
2023-10-05T15:12:05.832+0300 DEBUG Double avg(NUMERIC arg)
2023-10-05T15:12:05.832+0300 DEBUG bit_and(arg)
2023-10-05T15:12:05.832+0300 DEBUG Integer bit_length(STRING_OR_CLOB arg)
2023-10-05T15:12:05.832+0300 DEBUG bit_or(arg)
2023-10-05T15:12:05.833+0300 DEBUG bitand(arg0, arg1)
2023-10-05T15:12:05.833+0300 DEBUG bitnot(arg)
2023-10-05T15:12:05.833+0300 DEBUG bitor(arg0, arg1)
2023-10-05T15:12:05.833+0300 DEBUG bitxor(arg0, arg1)
2023-10-05T15:12:05.833+0300 DEBUG Boolean bool_and(BOOLEAN predicate)
2023-10-05T15:12:05.833+0300 DEBUG Boolean bool_or(BOOLEAN predicate)
2023-10-05T15:12:05.833+0300 DEBUG cast(arg as Type)
2023-10-05T15:12:05.834+0300 DEBUG Double cbrt(NUMERIC arg)
2023-10-05T15:12:05.834+0300 DEBUG ceiling(NUMERIC arg)
2023-10-05T15:12:05.834+0300 DEBUG Character char(INTEGER arg)
2023-10-05T15:12:05.834+0300 DEBUG Integer character_length(STRING_OR_CLOB arg)
2023-10-05T15:12:05.834+0300 DEBUG Character chr(INTEGER arg)
2023-10-05T15:12:05.834+0300 DEBUG coalesce(arg0[, arg1[, ...]])
2023-10-05T15:12:05.835+0300 DEBUG String collate(STRING string as COLLATION collation)
2023-10-05T15:12:05.835+0300 DEBUG (STRING string0[, STRING string1[, ...]])
2023-10-05T15:12:05.835+0300 DEBUG Double corr(NUMERIC arg0, NUMERIC arg1)
2023-10-05T15:12:05.835+0300 DEBUG Double cos(NUMERIC arg)
2023-10-05T15:12:05.835+0300 DEBUG Double cosh(NUMERIC arg)
2023-10-05T15:12:05.836+0300 DEBUG Double cot(NUMERIC arg)
2023-10-05T15:12:05.836+0300 DEBUG Long count([distinct ]{arg|*})
2023-10-05T15:12:05.836+0300 DEBUG Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2023-10-05T15:12:05.836+0300 DEBUG Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2023-10-05T15:12:05.836+0300 DEBUG Double cume_dist([arg0[, ...]])
2023-10-05T15:12:05.837+0300 DEBUG Date current date
2023-10-05T15:12:05.837+0300 DEBUG Time current time
2023-10-05T15:12:05.837+0300 DEBUG Timestamp current timestamp
2023-10-05T15:12:05.837+0300 DEBUG Date current_date
2023-10-05T15:12:05.837+0300 DEBUG Instant current_instant
2023-10-05T15:12:05.837+0300 DEBUG Time current_time
2023-10-05T15:12:05.837+0300 DEBUG Timestamp current_timestamp
2023-10-05T15:12:05.838+0300 DEBUG date_trunc(STRING field, TEMPORAL datetime)
2023-10-05T15:12:05.838+0300 DEBUG dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-10-05T15:12:05.838+0300 DEBUG basicType@5(java.lang.Long,-5)|basicType@17(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-10-05T15:12:05.839+0300 DEBUG Double degrees(NUMERIC arg)
2023-10-05T15:12:05.839+0300 DEBUG Long dense_rank([arg0[, ...]])
2023-10-05T15:12:05.839+0300 DEBUG Boolean every(BOOLEAN predicate)
2023-10-05T15:12:05.839+0300 DEBUG Double exp(NUMERIC arg)
2023-10-05T15:12:05.839+0300 DEBUG extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-10-05T15:12:05.839+0300 DEBUG first_valueANY value
2023-10-05T15:12:05.840+0300 DEBUG floor(NUMERIC arg)
2023-10-05T15:12:05.840+0300 DEBUG String format(TEMPORAL datetime as STRING pattern)
2023-10-05T15:12:05.840+0300 DEBUG greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-10-05T15:12:05.840+0300 DEBUG ifnull(arg0, arg1)
2023-10-05T15:12:05.840+0300 DEBUG String initcap(arg)
2023-10-05T15:12:05.840+0300 DEBUG String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-10-05T15:12:05.841+0300 DEBUG Instant instant
2023-10-05T15:12:05.841+0300 DEBUG lagANY value[, INTEGER offset[, ANY default]]
2023-10-05T15:12:05.841+0300 DEBUG last_valueANY value
2023-10-05T15:12:05.841+0300 DEBUG leadANY value[, INTEGER offset[, ANY default]]
2023-10-05T15:12:05.841+0300 DEBUG least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-10-05T15:12:05.841+0300 DEBUG String left(STRING string, INTEGER length)
2023-10-05T15:12:05.842+0300 DEBUG Integer length(STRING_OR_CLOB arg)
2023-10-05T15:12:05.842+0300 DEBUG String listagg(STRING arg0, STRING arg1)
2023-10-05T15:12:05.842+0300 DEBUG Double ln(NUMERIC arg)
2023-10-05T15:12:05.842+0300 DEBUG LocalDate local date
2023-10-05T15:12:05.842+0300 DEBUG LocalDateTime local datetime
2023-10-05T15:12:05.842+0300 DEBUG LocalTime local time
2023-10-05T15:12:05.843+0300 DEBUG LocalDate local_date
2023-10-05T15:12:05.843+0300 DEBUG LocalDateTime local_datetime
2023-10-05T15:12:05.843+0300 DEBUG LocalTime local_time
2023-10-05T15:12:05.843+0300 DEBUG Time localtime
2023-10-05T15:12:05.843+0300 DEBUG Timestamp localtimestamp
2023-10-05T15:12:05.843+0300 DEBUG Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-10-05T15:12:05.844+0300 DEBUG Double log(NUMERIC arg0[, NUMERIC arg1])
2023-10-05T15:12:05.844+0300 DEBUG Double log10(NUMERIC arg)
2023-10-05T15:12:05.844+0300 DEBUG String lower(STRING string)
2023-10-05T15:12:05.844+0300 DEBUG String lpad(STRING string, INTEGER length[, STRING padding])
2023-10-05T15:12:05.844+0300 DEBUG String ltrim(STRING string[, STRING characters])
2023-10-05T15:12:05.844+0300 DEBUG Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2023-10-05T15:12:05.845+0300 DEBUG Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2023-10-05T15:12:05.845+0300 DEBUG Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2023-10-05T15:12:05.845+0300 DEBUG Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2023-10-05T15:12:05.845+0300 DEBUG max(COMPARABLE arg)
2023-10-05T15:12:05.845+0300 DEBUG String md5(arg)
2023-10-05T15:12:05.846+0300 DEBUG Double median(NUMERIC arg)
2023-10-05T15:12:05.846+0300 DEBUG min(COMPARABLE arg)
2023-10-05T15:12:05.846+0300 DEBUG Integer mod(INTEGER arg0, INTEGER arg1)
2023-10-05T15:12:05.846+0300 DEBUG mode()
2023-10-05T15:12:05.846+0300 DEBUG nth_valueANY value, INTEGER nth
2023-10-05T15:12:05.846+0300 DEBUG nullif(arg0, arg1)
2023-10-05T15:12:05.847+0300 DEBUG Integer octet_length(STRING_OR_CLOB arg)
2023-10-05T15:12:05.847+0300 DEBUG OffsetDateTime offset datetime
2023-10-05T15:12:05.847+0300 DEBUG OffsetDateTime offset_datetime
2023-10-05T15:12:05.847+0300 DEBUG String overlay(string placing replacement from start[ for length])
2023-10-05T15:12:05.847+0300 DEBUG String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-10-05T15:12:05.848+0300 DEBUG Double percent_rank([arg0[, ...]])
2023-10-05T15:12:05.848+0300 DEBUG percentile_cont(NUMERIC arg)
2023-10-05T15:12:05.848+0300 DEBUG percentile_disc(NUMERIC arg)
2023-10-05T15:12:05.848+0300 DEBUG Double pi
2023-10-05T15:12:05.848+0300 DEBUG Integer position(STRING pattern in STRING string)
2023-10-05T15:12:05.848+0300 DEBUG Double power(NUMERIC arg0, NUMERIC arg1)
2023-10-05T15:12:05.849+0300 DEBUG Double radians(NUMERIC arg)
2023-10-05T15:12:05.849+0300 DEBUG Long rank([arg0[, ...]])
2023-10-05T15:12:05.849+0300 DEBUG Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2023-10-05T15:12:05.849+0300 DEBUG Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2023-10-05T15:12:05.849+0300 DEBUG Double regr_count(NUMERIC arg0, NUMERIC arg1)
2023-10-05T15:12:05.850+0300 DEBUG Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2023-10-05T15:12:05.850+0300 DEBUG Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2023-10-05T15:12:05.850+0300 DEBUG Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2023-10-05T15:12:05.850+0300 DEBUG Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2023-10-05T15:12:05.851+0300 DEBUG Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2023-10-05T15:12:05.851+0300 DEBUG Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2023-10-05T15:12:05.851+0300 DEBUG String repeat(STRING string, INTEGER times)
2023-10-05T15:12:05.851+0300 DEBUG String replace(STRING string, STRING pattern, STRING replacement)
2023-10-05T15:12:05.851+0300 DEBUG String right(STRING string, INTEGER length)
2023-10-05T15:12:05.851+0300 DEBUG round(NUMERIC number[, INTEGER places])
2023-10-05T15:12:05.852+0300 DEBUG Long row_number()
2023-10-05T15:12:05.852+0300 DEBUG String rpad(STRING string, INTEGER length[, STRING padding])
2023-10-05T15:12:05.852+0300 DEBUG String rtrim(STRING string[, STRING characters])
2023-10-05T15:12:05.852+0300 DEBUG Integer sign(NUMERIC arg)
2023-10-05T15:12:05.852+0300 DEBUG Double sin(NUMERIC arg)
2023-10-05T15:12:05.853+0300 DEBUG Double sinh(NUMERIC arg)
2023-10-05T15:12:05.853+0300 DEBUG String soundex(arg)
2023-10-05T15:12:05.853+0300 DEBUG Object sql
2023-10-05T15:12:05.853+0300 DEBUG Double sqrt(NUMERIC arg)
2023-10-05T15:12:05.853+0300 DEBUG Double stddev(NUMERIC arg)
2023-10-05T15:12:05.853+0300 DEBUG Double stddev_pop(NUMERIC arg)
2023-10-05T15:12:05.853+0300 DEBUG Double stddev_samp(NUMERIC arg)
2023-10-05T15:12:05.853+0300 DEBUG String str(arg)
2023-10-05T15:12:05.854+0300 DEBUG String substr(STRING string, INTEGER start[, INTEGER length])
2023-10-05T15:12:05.854+0300 DEBUG String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-10-05T15:12:05.854+0300 DEBUG sum(arg)
2023-10-05T15:12:05.854+0300 DEBUG Double tan(NUMERIC arg)
2023-10-05T15:12:05.854+0300 DEBUG Double tanh(NUMERIC arg)
2023-10-05T15:12:05.854+0300 DEBUG timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-10-05T15:12:05.854+0300 DEBUG basicType@5(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-10-05T15:12:05.855+0300 DEBUG String to_char(ANY arg0[, STRING arg1, STRING arg2])
2023-10-05T15:12:05.855+0300 DEBUG Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2023-10-05T15:12:05.855+0300 DEBUG Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2023-10-05T15:12:05.855+0300 DEBUG Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2023-10-05T15:12:05.856+0300 DEBUG String translate(STRING arg0, STRING arg1, STRING arg2)
2023-10-05T15:12:05.856+0300 DEBUG String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-10-05T15:12:05.856+0300 DEBUG trunc( ... )
2023-10-05T15:12:05.856+0300 DEBUG truncate( ... )
2023-10-05T15:12:05.856+0300 DEBUG String upper(STRING string)
2023-10-05T15:12:05.857+0300 DEBUG Double var_pop(NUMERIC arg)
2023-10-05T15:12:05.857+0300 DEBUG Double var_samp(NUMERIC arg)
2023-10-05T15:12:05.857+0300 DEBUG Double variance(NUMERIC arg)
2023-10-05T15:12:05.866+0300 DEBUG Starting QueryPlanCache(2048)
2023-10-05T15:12:06.090+0300 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-10-05T15:12:06.096+0300 DEBUG Configured EntityCopyObserver strategy: disallow
2023-10-05T15:12:06.276+0300 DEBUG Not known whether passed class name [com.joe.restapi.entity.Department] is safe
2023-10-05T15:12:06.276+0300 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.joe.restapi.entity.Department
2023-10-05T15:12:06.836+0300 DEBUG HHH000513: Unable to create the ReflectionOptimizer for [com.joe.restapi.entity.Department]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [departmentAddress]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:510)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:321)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:271)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:444)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1817)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1158)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1309)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1298)
	at com.joe.restapi.RestApiApplication.main(RestApiApplication.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2023-10-05T15:12:06.951+0300 DEBUG Starting post-init callbacks
2023-10-05T15:12:06.952+0300 DEBUG Starting PostInitCallbackEntry : Entity(com.joe.restapi.entity.Department) `staticFetchableList` generator
2023-10-05T15:12:06.953+0300 DEBUG Starting PostInitCallbackEntry : Entity(com.joe.restapi.entity.Department) `sqmMultiTableInsertStrategy` interpretation
2023-10-05T15:12:07.156+0300 DEBUG Static SQL for entity: com.joe.restapi.entity.Department
2023-10-05T15:12:07.157+0300 DEBUG  Version select: select id from department_restapi_tbl where id=?
2023-10-05T15:12:07.159+0300 DEBUG  Insert (0): insert into department_restapi_tbl (department_address,department_code,department_name,id) values (?,?,?,?)
2023-10-05T15:12:07.161+0300 DEBUG  Update (0): update department_restapi_tbl set department_address=?,department_code=?,department_name=? where id=?
2023-10-05T15:12:07.162+0300 DEBUG  Delete (0): delete from department_restapi_tbl where id=?
2023-10-05T15:12:07.212+0300 DEBUG Created new SQL alias : d1_0
2023-10-05T15:12:07.221+0300 DEBUG Registration of TableGroup [StandardTableGroup(com.joe.restapi.entity.Department)] with identifierForTableGroup [com.joe.restapi.entity.Department] for NavigablePath [com.joe.restapi.entity.Department] 
2023-10-05T15:12:07.267+0300 DEBUG DomainResult Graph:
 \-EntityResultImpl [com.joe.restapi.entity.Department]
 |  +-BasicFetch [com.joe.restapi.entity.Department.departmentAddress]
 |  +-BasicFetch [com.joe.restapi.entity.Department.departmentCode]
 |  \-BasicFetch [com.joe.restapi.entity.Department.departmentName]

2023-10-05T15:12:07.277+0300 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (d1 : com.joe.restapi.entity.Department) {
          primaryTableReference : department_restapi_tbl as d1_0
        }
      }
    }

2023-10-05T15:12:07.361+0300 INFO HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-10-05T15:12:07.362+0300 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4ef56692] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1a121a07]
2023-10-05T15:12:07.365+0300 DEBUG Checking 0 named HQL queries
2023-10-05T15:12:07.365+0300 DEBUG Checking 0 named SQL queries
2023-10-05T15:12:07.484+0300 DEBUG No alter strings for table : department_restapi_tbl
2023-10-05T15:12:07.489+0300 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@128a2dab
2023-10-05T15:12:07.490+0300 DEBUG Registering SessionFactory: d6ee9e05-9edd-4ce7-8736-3d78cbed3fd7 (<unnamed>)
2023-10-05T15:12:07.490+0300 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-10-05T15:12:07.490+0300 DEBUG Instantiated SessionFactory
2023-10-05T15:12:07.949+0300 DEBUG Statistics initialized [enabled=false]
2023-10-05T15:12:08.513+0300 DEBUG JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:310)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1021)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:899)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy4/jdk.proxy4.$Proxy132.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:141)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1817)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:942)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1309)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1298)
	at com.joe.restapi.RestApiApplication.main(RestApiApplication.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2023-10-05T15:12:08.655+0300 DEBUG JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:310)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1021)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:899)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy4/jdk.proxy4.$Proxy132.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:141)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1817)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:942)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1309)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1298)
	at com.joe.restapi.RestApiApplication.main(RestApiApplication.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2023-10-05T15:12:08.870+0300 DEBUG Loaded expression factory via original TCCL
2023-10-05T15:12:08.879+0300 DEBUG Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2023-10-05T15:12:08.880+0300 DEBUG Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2023-10-05T15:12:08.888+0300 DEBUG Trying to load META-INF/validation.xml for XML based Validator configuration.
2023-10-05T15:12:08.888+0300 DEBUG Trying to load META-INF/validation.xml via user class loader
2023-10-05T15:12:08.889+0300 DEBUG Trying to load META-INF/validation.xml via TCCL
2023-10-05T15:12:08.890+0300 DEBUG Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2023-10-05T15:12:08.890+0300 DEBUG No META-INF/validation.xml found. Using annotation based configuration only.
2023-10-05T15:12:08.891+0300 DEBUG Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2023-10-05T15:12:08.891+0300 DEBUG Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2023-10-05T15:12:08.895+0300 DEBUG HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2023-10-05T15:12:08.897+0300 DEBUG HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2023-10-05T15:12:08.897+0300 DEBUG HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2023-10-05T15:12:08.897+0300 DEBUG HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2023-10-05T15:12:08.898+0300 DEBUG HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2023-10-05T15:12:08.898+0300 DEBUG HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2023-10-05T15:13:16.237+0300 DEBUG HHH000031: Closing
2023-10-05T15:13:16.239+0300 DEBUG Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4ac4870] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1a121a07]
2023-10-05T15:13:16.240+0300 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-10-05T15:13:16.243+0300 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-10-05T15:13:25.714+0300 INFO HV000001: Hibernate Validator 8.0.1.Final
2023-10-05T15:13:25.732+0300 DEBUG Trying to load META-INF/validation.xml for XML based Validator configuration.
2023-10-05T15:13:25.734+0300 DEBUG Trying to load META-INF/validation.xml via TCCL
2023-10-05T15:13:25.737+0300 DEBUG Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2023-10-05T15:13:25.738+0300 DEBUG No META-INF/validation.xml found. Using annotation based configuration only.
2023-10-05T15:13:25.763+0300 DEBUG Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2023-10-05T15:13:25.765+0300 DEBUG Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2023-10-05T15:13:25.832+0300 DEBUG Loaded expression factory via original TCCL
2023-10-05T15:13:26.184+0300 DEBUG HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2023-10-05T15:13:26.202+0300 DEBUG HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2023-10-05T15:13:26.204+0300 DEBUG HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2023-10-05T15:13:26.205+0300 DEBUG HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2023-10-05T15:13:26.206+0300 DEBUG HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2023-10-05T15:13:26.207+0300 DEBUG HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2023-10-05T15:13:33.844+0300 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@110f5e4e
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/home/joe/Desktop/intellij-ws/rest-api/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.joe.restapi.entity.Department]
	Mapping files names []
	Properties []
2023-10-05T15:13:33.889+0300 DEBUG Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-10-05T15:13:33.895+0300 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-10-05T15:13:34.018+0300 INFO HHH000412: Hibernate ORM core version 6.2.9.Final
2023-10-05T15:13:34.023+0300 DEBUG HHH000206: hibernate.properties not found
2023-10-05T15:13:34.027+0300 INFO HHH000406: Using bytecode reflection optimizer
2023-10-05T15:13:34.125+0300 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-10-05T15:13:34.127+0300 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-10-05T15:13:34.130+0300 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-10-05T15:13:34.131+0300 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-10-05T15:13:34.134+0300 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-10-05T15:13:34.138+0300 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-10-05T15:13:34.140+0300 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-10-05T15:13:34.145+0300 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-10-05T15:13:34.148+0300 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-10-05T15:13:34.151+0300 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-10-05T15:13:34.152+0300 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-10-05T15:13:34.157+0300 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-10-05T15:13:34.196+0300 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-10-05T15:13:34.200+0300 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-10-05T15:13:34.514+0300 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@63eda93d
2023-10-05T15:13:34.516+0300 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@63eda93d
2023-10-05T15:13:34.516+0300 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@63eda93d
2023-10-05T15:13:34.517+0300 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@220ca788
2023-10-05T15:13:34.518+0300 DEBUG Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@220ca788
2023-10-05T15:13:34.519+0300 DEBUG Adding type registration true_false -> org.hibernate.type.BasicTypeReference@d8b4d53
2023-10-05T15:13:34.520+0300 DEBUG Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@d8b4d53
2023-10-05T15:13:34.521+0300 DEBUG Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@36b3efc2
2023-10-05T15:13:34.521+0300 DEBUG Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@36b3efc2
2023-10-05T15:13:34.522+0300 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@38191c68
2023-10-05T15:13:34.523+0300 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@38191c68
2023-10-05T15:13:34.524+0300 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@38191c68
2023-10-05T15:13:34.525+0300 DEBUG Adding type registration binary -> org.hibernate.type.BasicTypeReference@7f6edc04
2023-10-05T15:13:34.525+0300 DEBUG Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7f6edc04
2023-10-05T15:13:34.526+0300 DEBUG Adding type registration [B -> org.hibernate.type.BasicTypeReference@7f6edc04
2023-10-05T15:13:34.527+0300 DEBUG Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2858f76f
2023-10-05T15:13:34.528+0300 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2858f76f
2023-10-05T15:13:34.528+0300 DEBUG Adding type registration image -> org.hibernate.type.BasicTypeReference@1bcc059
2023-10-05T15:13:34.529+0300 DEBUG Adding type registration blob -> org.hibernate.type.BasicTypeReference@7136665a
2023-10-05T15:13:34.530+0300 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7136665a
2023-10-05T15:13:34.530+0300 DEBUG Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@78311a84
2023-10-05T15:13:34.531+0300 DEBUG Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@173d6962
2023-10-05T15:13:34.532+0300 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@7064ddd4
2023-10-05T15:13:34.533+0300 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@7064ddd4
2023-10-05T15:13:34.533+0300 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7064ddd4
2023-10-05T15:13:34.534+0300 DEBUG Adding type registration integer -> org.hibernate.type.BasicTypeReference@32a27134
2023-10-05T15:13:34.535+0300 DEBUG Adding type registration int -> org.hibernate.type.BasicTypeReference@32a27134
2023-10-05T15:13:34.536+0300 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@32a27134
2023-10-05T15:13:34.536+0300 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4237a8de
2023-10-05T15:13:34.537+0300 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4237a8de
2023-10-05T15:13:34.538+0300 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4237a8de
2023-10-05T15:13:34.539+0300 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@3ebdaf83
2023-10-05T15:13:34.540+0300 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@3ebdaf83
2023-10-05T15:13:34.540+0300 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3ebdaf83
2023-10-05T15:13:34.541+0300 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@68e14ffd
2023-10-05T15:13:34.542+0300 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@68e14ffd
2023-10-05T15:13:34.542+0300 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@68e14ffd
2023-10-05T15:13:34.543+0300 DEBUG Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49ebb804
2023-10-05T15:13:34.544+0300 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49ebb804
2023-10-05T15:13:34.545+0300 DEBUG Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@366598bf
2023-10-05T15:13:34.545+0300 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@366598bf
2023-10-05T15:13:34.546+0300 DEBUG Adding type registration character -> org.hibernate.type.BasicTypeReference@65f7f847
2023-10-05T15:13:34.547+0300 DEBUG Adding type registration char -> org.hibernate.type.BasicTypeReference@65f7f847
2023-10-05T15:13:34.547+0300 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@65f7f847
2023-10-05T15:13:34.548+0300 DEBUG Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@70bdda3
2023-10-05T15:13:34.549+0300 DEBUG Adding type registration string -> org.hibernate.type.BasicTypeReference@13347ede
2023-10-05T15:13:34.550+0300 DEBUG Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@13347ede
2023-10-05T15:13:34.551+0300 DEBUG Adding type registration nstring -> org.hibernate.type.BasicTypeReference@90eac67
2023-10-05T15:13:34.551+0300 DEBUG Adding type registration characters -> org.hibernate.type.BasicTypeReference@536158c1
2023-10-05T15:13:34.552+0300 DEBUG Adding type registration char[] -> org.hibernate.type.BasicTypeReference@536158c1
2023-10-05T15:13:34.553+0300 DEBUG Adding type registration [C -> org.hibernate.type.BasicTypeReference@536158c1
2023-10-05T15:13:34.554+0300 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@a5e71cb
2023-10-05T15:13:34.555+0300 DEBUG Adding type registration text -> org.hibernate.type.BasicTypeReference@3aac2cd0
2023-10-05T15:13:34.556+0300 DEBUG Adding type registration ntext -> org.hibernate.type.BasicTypeReference@46bdc276
2023-10-05T15:13:34.556+0300 DEBUG Adding type registration clob -> org.hibernate.type.BasicTypeReference@1f432d30
2023-10-05T15:13:34.557+0300 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1f432d30
2023-10-05T15:13:34.558+0300 DEBUG Adding type registration nclob -> org.hibernate.type.BasicTypeReference@66eac73a
2023-10-05T15:13:34.558+0300 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@66eac73a
2023-10-05T15:13:34.559+0300 DEBUG Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3dfbbd9b
2023-10-05T15:13:34.559+0300 DEBUG Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@157d6620
2023-10-05T15:13:34.560+0300 DEBUG Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@13d1e312
2023-10-05T15:13:34.561+0300 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@23b23545
2023-10-05T15:13:34.561+0300 DEBUG Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@434543cd
2023-10-05T15:13:34.562+0300 DEBUG Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3df771e3
2023-10-05T15:13:34.563+0300 DEBUG Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2122cc3c
2023-10-05T15:13:34.563+0300 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2122cc3c
2023-10-05T15:13:34.564+0300 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1388cd40
2023-10-05T15:13:34.565+0300 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1388cd40
2023-10-05T15:13:34.566+0300 DEBUG Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7a3aafd7
2023-10-05T15:13:34.566+0300 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7a3aafd7
2023-10-05T15:13:34.567+0300 DEBUG Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7cc4b11a
2023-10-05T15:13:34.568+0300 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7cc4b11a
2023-10-05T15:13:34.569+0300 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4bb0c192
2023-10-05T15:13:34.570+0300 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4bb0c192
2023-10-05T15:13:34.570+0300 DEBUG Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1e87f769
2023-10-05T15:13:34.571+0300 DEBUG Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@316ca779
2023-10-05T15:13:34.572+0300 DEBUG Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@68f99c2f
2023-10-05T15:13:34.572+0300 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@68f99c2f
2023-10-05T15:13:34.573+0300 DEBUG Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@25087cf3
2023-10-05T15:13:34.574+0300 DEBUG Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@415fb84
2023-10-05T15:13:34.574+0300 DEBUG Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5096c310
2023-10-05T15:13:34.575+0300 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@742a25c9
2023-10-05T15:13:34.576+0300 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@742a25c9
2023-10-05T15:13:34.577+0300 DEBUG Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@12a3205b
2023-10-05T15:13:34.577+0300 DEBUG Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@39c13050
2023-10-05T15:13:34.578+0300 DEBUG Adding type registration date -> org.hibernate.type.BasicTypeReference@5f29ea3b
2023-10-05T15:13:34.579+0300 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5f29ea3b
2023-10-05T15:13:34.580+0300 DEBUG Adding type registration time -> org.hibernate.type.BasicTypeReference@7a08987a
2023-10-05T15:13:34.580+0300 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7a08987a
2023-10-05T15:13:34.581+0300 DEBUG Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71a2de98
2023-10-05T15:13:34.581+0300 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71a2de98
2023-10-05T15:13:34.582+0300 DEBUG Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71a2de98
2023-10-05T15:13:34.583+0300 DEBUG Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4151334c
2023-10-05T15:13:34.583+0300 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4151334c
2023-10-05T15:13:34.584+0300 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4151334c
2023-10-05T15:13:34.586+0300 DEBUG Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@51b9716f
2023-10-05T15:13:34.586+0300 DEBUG Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6fcce86a
2023-10-05T15:13:34.587+0300 DEBUG Adding type registration instant -> org.hibernate.type.BasicTypeReference@87dad15
2023-10-05T15:13:34.587+0300 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@87dad15
2023-10-05T15:13:34.588+0300 DEBUG Adding type registration uuid -> org.hibernate.type.BasicTypeReference@407e2405
2023-10-05T15:13:34.588+0300 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@407e2405
2023-10-05T15:13:34.589+0300 DEBUG Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@407e2405
2023-10-05T15:13:34.589+0300 DEBUG Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5a56176c
2023-10-05T15:13:34.590+0300 DEBUG Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@52d12bf4
2023-10-05T15:13:34.590+0300 DEBUG Adding type registration class -> org.hibernate.type.BasicTypeReference@37a131be
2023-10-05T15:13:34.591+0300 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@37a131be
2023-10-05T15:13:34.592+0300 DEBUG Adding type registration currency -> org.hibernate.type.BasicTypeReference@64e6543
2023-10-05T15:13:34.592+0300 DEBUG Adding type registration Currency -> org.hibernate.type.BasicTypeReference@64e6543
2023-10-05T15:13:34.593+0300 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@64e6543
2023-10-05T15:13:34.593+0300 DEBUG Adding type registration locale -> org.hibernate.type.BasicTypeReference@6c49ef91
2023-10-05T15:13:34.594+0300 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6c49ef91
2023-10-05T15:13:34.594+0300 DEBUG Adding type registration serializable -> org.hibernate.type.BasicTypeReference@371ce767
2023-10-05T15:13:34.595+0300 DEBUG Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@371ce767
2023-10-05T15:13:34.595+0300 DEBUG Adding type registration timezone -> org.hibernate.type.BasicTypeReference@90e1cfb
2023-10-05T15:13:34.596+0300 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@90e1cfb
2023-10-05T15:13:34.596+0300 DEBUG Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7c9f14e4
2023-10-05T15:13:34.597+0300 DEBUG Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7c9f14e4
2023-10-05T15:13:34.597+0300 DEBUG Adding type registration url -> org.hibernate.type.BasicTypeReference@5f894981
2023-10-05T15:13:34.598+0300 DEBUG Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5f894981
2023-10-05T15:13:34.598+0300 DEBUG Adding type registration row_version -> org.hibernate.type.BasicTypeReference@ffebac8
2023-10-05T15:13:34.618+0300 DEBUG Adding type registration object -> org.hibernate.type.JavaObjectType@3b417e57
2023-10-05T15:13:34.619+0300 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3b417e57
2023-10-05T15:13:34.623+0300 DEBUG Adding type registration null -> org.hibernate.type.NullType@29ff40f3
2023-10-05T15:13:34.624+0300 DEBUG Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@13372cd4
2023-10-05T15:13:34.625+0300 DEBUG Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6ad7801f
2023-10-05T15:13:34.625+0300 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@20be5c79
2023-10-05T15:13:34.626+0300 DEBUG Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@73157845
2023-10-05T15:13:34.627+0300 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@59eeab7f
2023-10-05T15:13:34.627+0300 DEBUG Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@f6f1f25
2023-10-05T15:13:34.628+0300 DEBUG Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5de0c725
2023-10-05T15:13:34.629+0300 DEBUG Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5ef4b8c
2023-10-05T15:13:34.647+0300 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@60b8cef5] into BootstrapContext; was [null]
2023-10-05T15:13:34.648+0300 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@60b8cef5) [was null]
2023-10-05T15:13:34.650+0300 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@7205a50a] into BootstrapContext; was [null]
2023-10-05T15:13:34.650+0300 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@67bd045d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4cf78192]
2023-10-05T15:13:34.699+0300 INFO HHH000021: Bytecode provider name : bytebuddy
2023-10-05T15:13:35.201+0300 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@60b8cef5]
2023-10-05T15:13:35.202+0300 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@60b8cef5]
2023-10-05T15:13:35.243+0300 DEBUG Database ->
       name : PostgreSQL
    version : 14.9 (Ubuntu 14.9-0ubuntu0.22.04.1)
      major : 14
      minor : 9
2023-10-05T15:13:35.244+0300 DEBUG Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2023-10-05T15:13:35.245+0300 DEBUG JDBC version : 4.2
2023-10-05T15:13:35.312+0300 DEBUG HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$DialectResolutionInfoImpl@174e416a
2023-10-05T15:13:35.330+0300 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2023-10-05T15:13:35.354+0300 DEBUG HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2023-10-05T15:13:35.373+0300 DEBUG addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@741b69fe) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@75438790)
2023-10-05T15:13:35.379+0300 DEBUG addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2023-10-05T15:13:35.380+0300 DEBUG addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-10-05T15:13:35.403+0300 DEBUG Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@4af025f
2023-10-05T15:13:35.404+0300 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4af025f
2023-10-05T15:13:35.404+0300 DEBUG Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@3b417e57`
2023-10-05T15:13:35.418+0300 DEBUG Adding type registration Duration -> basicType@1(java.time.Duration,2)
2023-10-05T15:13:35.419+0300 DEBUG Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2023-10-05T15:13:35.460+0300 DEBUG Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2023-10-05T15:13:35.461+0300 DEBUG Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2023-10-05T15:13:35.461+0300 DEBUG Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2023-10-05T15:13:35.462+0300 DEBUG Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2023-10-05T15:13:35.462+0300 DEBUG Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2023-10-05T15:13:35.462+0300 DEBUG Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2023-10-05T15:13:35.465+0300 DEBUG Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2023-10-05T15:13:35.466+0300 DEBUG Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2023-10-05T15:13:35.467+0300 DEBUG Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2023-10-05T15:13:35.472+0300 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@75ba8722] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4319b98e]
2023-10-05T15:13:35.592+0300 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-10-05T15:13:35.678+0300 DEBUG Binding entity from annotated class: com.joe.restapi.entity.Department
2023-10-05T15:13:35.716+0300 DEBUG Import with entity name department_restapi_tbl
2023-10-05T15:13:35.734+0300 DEBUG Bind entity com.joe.restapi.entity.Department on table department_restapi_tbl
2023-10-05T15:13:35.759+0300 DEBUG Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-10-05T15:13:35.804+0300 DEBUG Binding column: AnnotatedColumn()
2023-10-05T15:13:35.806+0300 DEBUG Not known whether passed class name [com.joe.restapi.entity.Department] is safe
2023-10-05T15:13:35.807+0300 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.joe.restapi.entity.Department
2023-10-05T15:13:35.816+0300 DEBUG MetadataSourceProcessor property id with lazy=false
2023-10-05T15:13:35.827+0300 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.joe.restapi.entity.Department:id]
2023-10-05T15:13:35.835+0300 DEBUG building BasicValue for id
2023-10-05T15:13:35.843+0300 DEBUG Skipping column re-registration: department_restapi_tbl.id
2023-10-05T15:13:35.846+0300 DEBUG Building property id
2023-10-05T15:13:35.853+0300 DEBUG #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2023-10-05T15:13:35.859+0300 DEBUG Binding column: AnnotatedColumn()
2023-10-05T15:13:35.859+0300 DEBUG MetadataSourceProcessor property departmentAddress with lazy=false
2023-10-05T15:13:35.860+0300 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.joe.restapi.entity.Department:departmentAddress]
2023-10-05T15:13:35.860+0300 DEBUG building BasicValue for departmentAddress
2023-10-05T15:13:35.860+0300 DEBUG Skipping column re-registration: department_restapi_tbl.department_address
2023-10-05T15:13:35.861+0300 DEBUG Building property departmentAddress
2023-10-05T15:13:35.863+0300 DEBUG Binding column: AnnotatedColumn()
2023-10-05T15:13:35.863+0300 DEBUG MetadataSourceProcessor property departmentCode with lazy=false
2023-10-05T15:13:35.864+0300 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.joe.restapi.entity.Department:departmentCode]
2023-10-05T15:13:35.864+0300 DEBUG building BasicValue for departmentCode
2023-10-05T15:13:35.864+0300 DEBUG Skipping column re-registration: department_restapi_tbl.department_code
2023-10-05T15:13:35.865+0300 DEBUG Building property departmentCode
2023-10-05T15:13:35.866+0300 DEBUG Binding column: AnnotatedColumn()
2023-10-05T15:13:35.866+0300 DEBUG MetadataSourceProcessor property departmentName with lazy=false
2023-10-05T15:13:35.867+0300 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.joe.restapi.entity.Department:departmentName]
2023-10-05T15:13:35.867+0300 DEBUG building BasicValue for departmentName
2023-10-05T15:13:35.867+0300 DEBUG Skipping column re-registration: department_restapi_tbl.department_name
2023-10-05T15:13:35.868+0300 DEBUG Building property departmentName
2023-10-05T15:13:35.884+0300 DEBUG Starting `BasicValueBinder#fillSimpleValue` for id
2023-10-05T15:13:35.889+0300 DEBUG Starting `BasicValueBinder#fillSimpleValue` for departmentAddress
2023-10-05T15:13:35.890+0300 DEBUG Starting `BasicValueBinder#fillSimpleValue` for departmentCode
2023-10-05T15:13:35.890+0300 DEBUG Starting `BasicValueBinder#fillSimpleValue` for departmentName
2023-10-05T15:13:35.900+0300 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [department_restapi_tbl]
2023-10-05T15:13:36.058+0300 INFO HHH000021: Bytecode provider name : bytebuddy
2023-10-05T15:13:36.102+0300 DEBUG Building session factory
2023-10-05T15:13:36.248+0300 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-10-05T15:13:36.249+0300 DEBUG Instantiating SessionFactory with settings: {java.specification.version=17, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@7b1d23d0, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=/home/joe/Desktop/intellij-ws/rest-api/target/classes:/home/joe/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/3.1.4/spring-boot-starter-actuator-3.1.4.jar:/home/joe/.m2/repository/org/springframework/boot/spring-boot-starter/3.1.4/spring-boot-starter-3.1.4.jar:/home/joe/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.1.4/spring-boot-starter-logging-3.1.4.jar:/home/joe/.m2/repository/ch/qos/logback/logback-classic/1.4.11/logback-classic-1.4.11.jar:/home/joe/.m2/repository/ch/qos/logback/logback-core/1.4.11/logback-core-1.4.11.jar:/home/joe/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.20.0/log4j-to-slf4j-2.20.0.jar:/home/joe/.m2/repository/org/apache/logging/log4j/log4j-api/2.20.0/log4j-api-2.20.0.jar:/home/joe/.m2/repository/org/slf4j/jul-to-slf4j/2.0.9/jul-to-slf4j-2.0.9.jar:/home/joe/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/home/joe/.m2/repository/org/yaml/snakeyaml/1.33/snakeyaml-1.33.jar:/home/joe/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/3.1.4/spring-boot-actuator-autoconfigure-3.1.4.jar:/home/joe/.m2/repository/org/springframework/boot/spring-boot-actuator/3.1.4/spring-boot-actuator-3.1.4.jar:/home/joe/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.2/jackson-databind-2.15.2.jar:/home/joe/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.2/jackson-annotations-2.15.2.jar:/home/joe/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.2/jackson-core-2.15.2.jar:/home/joe/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.2/jackson-datatype-jsr310-2.15.2.jar:/home/joe/.m2/repository/io/micrometer/micrometer-observation/1.11.4/micrometer-observation-1.11.4.jar:/home/joe/.m2/repository/io/micrometer/micrometer-commons/1.11.4/micrometer-commons-1.11.4.jar:/home/joe/.m2/repository/io/micrometer/micrometer-core/1.11.4/micrometer-core-1.11.4.jar:/home/joe/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/home/joe/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/home/joe/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.1.4/spring-boot-starter-data-jpa-3.1.4.jar:/home/joe/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.1.4/spring-boot-starter-aop-3.1.4.jar:/home/joe/.m2/repository/org/springframework/spring-aop/6.0.12/spring-aop-6.0.12.jar:/home/joe/.m2/repository/org/aspectj/aspectjweaver/1.9.20/aspectjweaver-1.9.20.jar:/home/joe/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.1.4/spring-boot-starter-jdbc-3.1.4.jar:/home/joe/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/home/joe/.m2/repository/org/springframework/spring-jdbc/6.0.12/spring-jdbc-6.0.12.jar:/home/joe/.m2/repository/org/hibernate/orm/hibernate-core/6.2.9.Final/hibernate-core-6.2.9.Final.jar:/home/joe/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/home/joe/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/home/joe/.m2/repository/org/jboss/logging/jboss-logging/3.5.3.Final/jboss-logging-3.5.3.Final.jar:/home/joe/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/home/joe/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/home/joe/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/home/joe/.m2/repository/net/bytebuddy/byte-buddy/1.14.8/byte-buddy-1.14.8.jar:/home/joe/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.3/jaxb-runtime-4.0.3.jar:/home/joe/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.3/jaxb-core-4.0.3.jar:/home/joe/.m2/repository/org/eclipse/angus/angus-activation/2.0.1/angus-activation-2.0.1.jar:/home/joe/.m2/repository/org/glassfish/jaxb/txw2/4.0.3/txw2-4.0.3.jar:/home/joe/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/home/joe/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/home/joe/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar:/home/joe/.m2/repository/org/springframework/data/spring-data-jpa/3.1.4/spring-data-jpa-3.1.4.jar:/home/joe/.m2/repository/org/springframework/data/spring-data-commons/3.1.4/spring-data-commons-3.1.4.jar:/home/joe/.m2/repository/org/springframework/spring-orm/6.0.12/spring-orm-6.0.12.jar:/home/joe/.m2/repository/org/springframework/spring-context/6.0.12/spring-context-6.0.12.jar:/home/joe/.m2/repository/org/springframework/spring-tx/6.0.12/spring-tx-6.0.12.jar:/home/joe/.m2/repository/org/springframework/spring-beans/6.0.12/spring-beans-6.0.12.jar:/home/joe/.m2/repository/org/slf4j/slf4j-api/2.0.9/slf4j-api-2.0.9.jar:/home/joe/.m2/repository/org/springframework/spring-aspects/6.0.12/spring-aspects-6.0.12.jar:/home/joe/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.1.4/spring-boot-starter-web-3.1.4.jar:/home/joe/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.1.4/spring-boot-starter-json-3.1.4.jar:/home/joe/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.2/jackson-datatype-jdk8-2.15.2.jar:/home/joe/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.2/jackson-module-parameter-names-2.15.2.jar:/home/joe/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.1.4/spring-boot-starter-tomcat-3.1.4.jar:/home/joe/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.13/tomcat-embed-core-10.1.13.jar:/home/joe/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.13/tomcat-embed-websocket-10.1.13.jar:/home/joe/.m2/repository/org/springframework/spring-web/6.0.12/spring-web-6.0.12.jar:/home/joe/.m2/repository/org/springframework/spring-webmvc/6.0.12/spring-webmvc-6.0.12.jar:/home/joe/.m2/repository/org/springframework/spring-expression/6.0.12/spring-expression-6.0.12.jar:/home/joe/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.1.4/spring-boot-starter-validation-3.1.4.jar:/home/joe/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.13/tomcat-embed-el-10.1.13.jar:/home/joe/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.1.Final/hibernate-validator-8.0.1.Final.jar:/home/joe/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/home/joe/.m2/repository/org/postgresql/postgresql/42.6.0/postgresql-42.6.0.jar:/home/joe/.m2/repository/org/checkerframework/checker-qual/3.31.0/checker-qual-3.31.0.jar:/home/joe/.m2/repository/org/springframework/boot/spring-boot-devtools/3.1.4/spring-boot-devtools-3.1.4.jar:/home/joe/.m2/repository/org/springframework/boot/spring-boot/3.1.4/spring-boot-3.1.4.jar:/home/joe/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.1.4/spring-boot-autoconfigure-3.1.4.jar:/home/joe/.m2/repository/com/h2database/h2/2.1.214/h2-2.1.214.jar:/home/joe/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar:/home/joe/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.1/jakarta.xml.bind-api-4.0.1.jar:/home/joe/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/home/joe/.m2/repository/org/springframework/spring-core/6.0.12/spring-core-6.0.12.jar:/home/joe/.m2/repository/org/springframework/spring-jcl/6.0.12/spring-jcl-6.0.12.jar, java.vm.vendor=Private Build, sun.arch.data.model=64, java.vendor.url=Unknown, catalina.useNaming=false, user.timezone=Africa/Nairobi, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Linux, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-17-openjdk-amd64/lib, sun.java.command=com.joe.restapi.RestApiApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@362b0789, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=/home/joe, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-08-24, java.home=/usr/lib/jvm/java-17-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.8.1+1-Ubuntu-0ubuntu122.04, user.name=joe, path.separator=:, os.version=6.2.0-34-generic, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=Unknown, java.io.tmpdir=/tmp, com.zaxxer.hikari.pool_number=1, catalina.home=/tmp/tomcat.8081.12031275957392693066, java.version=17.0.8.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=/home/joe/Desktop/intellij-ws/rest-api, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=13275, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=/tmp/tomcat.8081.12031275957392693066, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@167d60ec, native.encoding=UTF-8, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Private Build, java.vm.info=mixed mode, sharing, java.vm.version=17.0.8.1+1-Ubuntu-0ubuntu122.04, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0}
2023-10-05T15:13:36.258+0300 DEBUG Session factory constructed with filter configurations : {}
2023-10-05T15:13:36.269+0300 DEBUG Trying to load META-INF/validation.xml for XML based Validator configuration.
2023-10-05T15:13:36.269+0300 DEBUG Trying to load META-INF/validation.xml via TCCL
2023-10-05T15:13:36.269+0300 DEBUG Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2023-10-05T15:13:36.270+0300 DEBUG No META-INF/validation.xml found. Using annotation based configuration only.
2023-10-05T15:13:36.270+0300 DEBUG Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2023-10-05T15:13:36.270+0300 DEBUG Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2023-10-05T15:13:36.271+0300 DEBUG Loaded expression factory via original TCCL
2023-10-05T15:13:36.274+0300 DEBUG HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2023-10-05T15:13:36.275+0300 DEBUG HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2023-10-05T15:13:36.276+0300 DEBUG HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2023-10-05T15:13:36.276+0300 DEBUG HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2023-10-05T15:13:36.276+0300 DEBUG HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2023-10-05T15:13:36.276+0300 DEBUG HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2023-10-05T15:13:36.279+0300 DEBUG Not known whether passed class name [com.joe.restapi.entity.Department] is safe
2023-10-05T15:13:36.279+0300 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.joe.restapi.entity.Department
2023-10-05T15:13:36.400+0300 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-10-05T15:13:36.506+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-10-05T15:13:36.506+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-10-05T15:13:36.507+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-10-05T15:13:36.508+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-10-05T15:13:36.511+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1a30aaae] under count; prior registration was null
2023-10-05T15:13:36.513+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4e00f82] under every; prior registration was null
2023-10-05T15:13:36.514+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@42c6602c] under any; prior registration was null
2023-10-05T15:13:36.515+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-10-05T15:13:36.515+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-10-05T15:13:36.515+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-10-05T15:13:36.515+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-10-05T15:13:36.515+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-10-05T15:13:36.516+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-10-05T15:13:36.516+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-10-05T15:13:36.516+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-10-05T15:13:36.516+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-10-05T15:13:36.517+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-10-05T15:13:36.517+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-10-05T15:13:36.518+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-10-05T15:13:36.518+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-10-05T15:13:36.518+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-10-05T15:13:36.518+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-10-05T15:13:36.518+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-10-05T15:13:36.518+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-10-05T15:13:36.523+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@38181a5b] under sinh; prior registration was null
2023-10-05T15:13:36.524+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2fcf73ea] under cosh; prior registration was null
2023-10-05T15:13:36.524+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@25597cce] under tanh; prior registration was null
2023-10-05T15:13:36.525+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4b70e8c1] under pi; prior registration was null
2023-10-05T15:13:36.525+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@33c2e936] under log; prior registration was null
2023-10-05T15:13:36.526+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-10-05T15:13:36.527+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-10-05T15:13:36.527+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-10-05T15:13:36.527+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-10-05T15:13:36.527+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-10-05T15:13:36.529+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-10-05T15:13:36.529+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-10-05T15:13:36.529+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-10-05T15:13:36.530+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-10-05T15:13:36.530+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-10-05T15:13:36.530+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-10-05T15:13:36.530+0300 DEBUG Registering alternate key : length -> character_length
2023-10-05T15:13:36.532+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3e4f9403] under position; prior registration was null
2023-10-05T15:13:36.537+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@75ffa70d] under overlay; prior registration was null
2023-10-05T15:13:36.539+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@194715a8] under trim; prior registration was null
2023-10-05T15:13:36.541+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@1ebfb1d3] under cast; prior registration was null
2023-10-05T15:13:36.541+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e7a3d02] under collate; prior registration was null
2023-10-05T15:13:36.543+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@4819118e] under extract; prior registration was null
2023-10-05T15:13:36.543+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-10-05T15:13:36.543+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-10-05T15:13:36.544+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@6d7a5b80] under ifnull; prior registration was null
2023-10-05T15:13:36.544+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-10-05T15:13:36.544+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-10-05T15:13:36.545+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@15f94320] under pad; prior registration was null
2023-10-05T15:13:36.546+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@7fac0ee0] under str; prior registration was null
2023-10-05T15:13:36.549+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2802e76e] under format; prior registration was null
2023-10-05T15:13:36.550+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@2d8a61c0] under timestampadd; prior registration was null
2023-10-05T15:13:36.552+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@19ef37fc] under timestampdiff; prior registration was null
2023-10-05T15:13:36.552+0300 DEBUG Registering alternate key : dateadd -> timestampadd
2023-10-05T15:13:36.552+0300 DEBUG Registering alternate key : datediff -> timestampdiff
2023-10-05T15:13:36.553+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@24baa4ca] under current_date; prior registration was null
2023-10-05T15:13:36.553+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@379886d8] under current_time; prior registration was null
2023-10-05T15:13:36.553+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3316592e] under current_timestamp; prior registration was null
2023-10-05T15:13:36.553+0300 DEBUG Registering alternate key : current date -> current_date
2023-10-05T15:13:36.554+0300 DEBUG Registering alternate key : current time -> current_time
2023-10-05T15:13:36.554+0300 DEBUG Registering alternate key : current timestamp -> current_timestamp
2023-10-05T15:13:36.554+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@26522507] under local_date; prior registration was null
2023-10-05T15:13:36.554+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@57bf49f3] under local_time; prior registration was null
2023-10-05T15:13:36.554+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2462ab9a] under local_datetime; prior registration was null
2023-10-05T15:13:36.554+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@253c5911] under offset_datetime; prior registration was null
2023-10-05T15:13:36.554+0300 DEBUG Registering alternate key : local date -> local_date
2023-10-05T15:13:36.555+0300 DEBUG Registering alternate key : local time -> local_time
2023-10-05T15:13:36.555+0300 DEBUG Registering alternate key : local datetime -> local_datetime
2023-10-05T15:13:36.555+0300 DEBUG Registering alternate key : offset datetime -> offset_datetime
2023-10-05T15:13:36.555+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@12f12aac] under instant; prior registration was null
2023-10-05T15:13:36.555+0300 DEBUG Registering alternate key : current_instant -> instant
2023-10-05T15:13:36.556+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@522f9814] under sql; prior registration was null
2023-10-05T15:13:36.556+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-10-05T15:13:36.556+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-10-05T15:13:36.557+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-10-05T15:13:36.557+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@33c2e936
2023-10-05T15:13:36.557+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@d12f908] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2023-10-05T15:13:36.557+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-10-05T15:13:36.557+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@25597cce
2023-10-05T15:13:36.558+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@38181a5b
2023-10-05T15:13:36.558+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2fcf73ea
2023-10-05T15:13:36.558+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2023-10-05T15:13:36.558+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2023-10-05T15:13:36.558+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2023-10-05T15:13:36.558+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2023-10-05T15:13:36.559+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4b70e8c1
2023-10-05T15:13:36.559+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-10-05T15:13:36.559+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-10-05T15:13:36.559+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-10-05T15:13:36.559+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2023-10-05T15:13:36.559+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2023-10-05T15:13:36.560+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-10-05T15:13:36.560+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2023-10-05T15:13:36.560+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2023-10-05T15:13:36.560+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2023-10-05T15:13:36.561+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2023-10-05T15:13:36.561+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2023-10-05T15:13:36.561+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2023-10-05T15:13:36.563+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@67dedd50] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2023-10-05T15:13:36.563+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-10-05T15:13:36.563+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-10-05T15:13:36.563+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@57bf49f3
2023-10-05T15:13:36.564+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@2462ab9a
2023-10-05T15:13:36.565+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@103d3ef6] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2023-10-05T15:13:36.566+0300 DEBUG Registering alternate key : length -> character_length
2023-10-05T15:13:36.566+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@297094d5] under bit_length; prior registration was null
2023-10-05T15:13:36.566+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@346264b] under octet_length; prior registration was null
2023-10-05T15:13:36.567+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-10-05T15:13:36.567+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2023-10-05T15:13:36.567+0300 DEBUG Registering alternate key : char -> chr
2023-10-05T15:13:36.567+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40a387ec] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3e4f9403
2023-10-05T15:13:36.568+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3990cb80] under bitand; prior registration was null
2023-10-05T15:13:36.568+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14eb365b] under bitor; prior registration was null
2023-10-05T15:13:36.568+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@26ad3ef3] under bitxor; prior registration was null
2023-10-05T15:13:36.568+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7a6d412d] under bitnot; prior registration was null
2023-10-05T15:13:36.568+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-10-05T15:13:36.569+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-10-05T15:13:36.569+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2023-10-05T15:13:36.569+0300 DEBUG Registering alternate key : every -> bool_and
2023-10-05T15:13:36.569+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2023-10-05T15:13:36.569+0300 DEBUG Registering alternate key : any -> bool_or
2023-10-05T15:13:36.570+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@459e492b] under median; prior registration was null
2023-10-05T15:13:36.570+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2023-10-05T15:13:36.570+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-10-05T15:13:36.570+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-10-05T15:13:36.571+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2023-10-05T15:13:36.571+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-10-05T15:13:36.571+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-10-05T15:13:36.571+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2023-10-05T15:13:36.571+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2023-10-05T15:13:36.571+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2023-10-05T15:13:36.572+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2023-10-05T15:13:36.573+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2023-10-05T15:13:36.573+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2023-10-05T15:13:36.573+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2023-10-05T15:13:36.573+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2023-10-05T15:13:36.573+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2023-10-05T15:13:36.573+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2023-10-05T15:13:36.574+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2023-10-05T15:13:36.574+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2023-10-05T15:13:36.574+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@479f0b69] under insert; prior registration was null
2023-10-05T15:13:36.575+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@94ab2c] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@75ffa70d
2023-10-05T15:13:36.576+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-10-05T15:13:36.576+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@d068a1e] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2023-10-05T15:13:36.576+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-10-05T15:13:36.577+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-10-05T15:13:36.578+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-10-05T15:13:36.578+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-10-05T15:13:36.578+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-10-05T15:13:36.578+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-10-05T15:13:36.580+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@2552bbd9] under listagg; prior registration was null
2023-10-05T15:13:36.580+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2023-10-05T15:13:36.580+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2023-10-05T15:13:36.580+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2023-10-05T15:13:36.581+0300 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2023-10-05T15:13:36.583+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@29c98fba] under mode; prior registration was null
2023-10-05T15:13:36.583+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@43fb3485] under percentile_cont; prior registration was null
2023-10-05T15:13:36.583+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7e4e972e] under percentile_disc; prior registration was null
2023-10-05T15:13:36.584+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1901f125] under rank; prior registration was null
2023-10-05T15:13:36.585+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@37fddf3f] under dense_rank; prior registration was null
2023-10-05T15:13:36.585+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@738930b4] under percent_rank; prior registration was null
2023-10-05T15:13:36.585+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@79da52d] under cume_dist; prior registration was null
2023-10-05T15:13:36.586+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@18b63798] under min; prior registration was NamedSqmFunctionTemplate(min)
2023-10-05T15:13:36.586+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@161af258] under max; prior registration was NamedSqmFunctionTemplate(max)
2023-10-05T15:13:36.587+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@70e15572] under round; prior registration was NamedSqmFunctionTemplate(round)
2023-10-05T15:13:36.592+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@45e75068] under trunc; prior registration was null
2023-10-05T15:13:36.592+0300 DEBUG Registering alternate key : truncate -> trunc
2023-10-05T15:13:36.593+0300 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e05a913] under date_trunc; prior registration was null
2023-10-05T15:13:36.597+0300 DEBUG abs(NUMERIC arg)
2023-10-05T15:13:36.597+0300 DEBUG Double acos(NUMERIC arg)
2023-10-05T15:13:36.598+0300 DEBUG Double acosh(NUMERIC arg)
2023-10-05T15:13:36.598+0300 DEBUG Boolean any(BOOLEAN predicate)
2023-10-05T15:13:36.598+0300 DEBUG Integer ascii(STRING arg)
2023-10-05T15:13:36.598+0300 DEBUG Double asin(NUMERIC arg)
2023-10-05T15:13:36.598+0300 DEBUG Double asinh(NUMERIC arg)
2023-10-05T15:13:36.599+0300 DEBUG Double atan(NUMERIC arg)
2023-10-05T15:13:36.599+0300 DEBUG Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-10-05T15:13:36.600+0300 DEBUG Double atanh(NUMERIC arg)
2023-10-05T15:13:36.600+0300 DEBUG Double avg(NUMERIC arg)
2023-10-05T15:13:36.600+0300 DEBUG bit_and(arg)
2023-10-05T15:13:36.600+0300 DEBUG Integer bit_length(STRING_OR_CLOB arg)
2023-10-05T15:13:36.600+0300 DEBUG bit_or(arg)
2023-10-05T15:13:36.600+0300 DEBUG bitand(arg0, arg1)
2023-10-05T15:13:36.601+0300 DEBUG bitnot(arg)
2023-10-05T15:13:36.601+0300 DEBUG bitor(arg0, arg1)
2023-10-05T15:13:36.601+0300 DEBUG bitxor(arg0, arg1)
2023-10-05T15:13:36.601+0300 DEBUG Boolean bool_and(BOOLEAN predicate)
2023-10-05T15:13:36.601+0300 DEBUG Boolean bool_or(BOOLEAN predicate)
2023-10-05T15:13:36.601+0300 DEBUG cast(arg as Type)
2023-10-05T15:13:36.602+0300 DEBUG Double cbrt(NUMERIC arg)
2023-10-05T15:13:36.602+0300 DEBUG ceiling(NUMERIC arg)
2023-10-05T15:13:36.602+0300 DEBUG Character char(INTEGER arg)
2023-10-05T15:13:36.602+0300 DEBUG Integer character_length(STRING_OR_CLOB arg)
2023-10-05T15:13:36.602+0300 DEBUG Character chr(INTEGER arg)
2023-10-05T15:13:36.602+0300 DEBUG coalesce(arg0[, arg1[, ...]])
2023-10-05T15:13:36.603+0300 DEBUG String collate(STRING string as COLLATION collation)
2023-10-05T15:13:36.603+0300 DEBUG (STRING string0[, STRING string1[, ...]])
2023-10-05T15:13:36.603+0300 DEBUG Double corr(NUMERIC arg0, NUMERIC arg1)
2023-10-05T15:13:36.603+0300 DEBUG Double cos(NUMERIC arg)
2023-10-05T15:13:36.603+0300 DEBUG Double cosh(NUMERIC arg)
2023-10-05T15:13:36.604+0300 DEBUG Double cot(NUMERIC arg)
2023-10-05T15:13:36.604+0300 DEBUG Long count([distinct ]{arg|*})
2023-10-05T15:13:36.604+0300 DEBUG Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2023-10-05T15:13:36.604+0300 DEBUG Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2023-10-05T15:13:36.604+0300 DEBUG Double cume_dist([arg0[, ...]])
2023-10-05T15:13:36.604+0300 DEBUG Date current date
2023-10-05T15:13:36.605+0300 DEBUG Time current time
2023-10-05T15:13:36.605+0300 DEBUG Timestamp current timestamp
2023-10-05T15:13:36.605+0300 DEBUG Date current_date
2023-10-05T15:13:36.605+0300 DEBUG Instant current_instant
2023-10-05T15:13:36.605+0300 DEBUG Time current_time
2023-10-05T15:13:36.605+0300 DEBUG Timestamp current_timestamp
2023-10-05T15:13:36.605+0300 DEBUG date_trunc(STRING field, TEMPORAL datetime)
2023-10-05T15:13:36.605+0300 DEBUG dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-10-05T15:13:36.606+0300 DEBUG basicType@5(java.lang.Long,-5)|basicType@17(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-10-05T15:13:36.607+0300 DEBUG Double degrees(NUMERIC arg)
2023-10-05T15:13:36.607+0300 DEBUG Long dense_rank([arg0[, ...]])
2023-10-05T15:13:36.607+0300 DEBUG Boolean every(BOOLEAN predicate)
2023-10-05T15:13:36.607+0300 DEBUG Double exp(NUMERIC arg)
2023-10-05T15:13:36.607+0300 DEBUG extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-10-05T15:13:36.607+0300 DEBUG first_valueANY value
2023-10-05T15:13:36.607+0300 DEBUG floor(NUMERIC arg)
2023-10-05T15:13:36.608+0300 DEBUG String format(TEMPORAL datetime as STRING pattern)
2023-10-05T15:13:36.608+0300 DEBUG greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-10-05T15:13:36.608+0300 DEBUG ifnull(arg0, arg1)
2023-10-05T15:13:36.608+0300 DEBUG String initcap(arg)
2023-10-05T15:13:36.608+0300 DEBUG String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-10-05T15:13:36.608+0300 DEBUG Instant instant
2023-10-05T15:13:36.609+0300 DEBUG lagANY value[, INTEGER offset[, ANY default]]
2023-10-05T15:13:36.609+0300 DEBUG last_valueANY value
2023-10-05T15:13:36.609+0300 DEBUG leadANY value[, INTEGER offset[, ANY default]]
2023-10-05T15:13:36.609+0300 DEBUG least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-10-05T15:13:36.609+0300 DEBUG String left(STRING string, INTEGER length)
2023-10-05T15:13:36.609+0300 DEBUG Integer length(STRING_OR_CLOB arg)
2023-10-05T15:13:36.610+0300 DEBUG String listagg(STRING arg0, STRING arg1)
2023-10-05T15:13:36.610+0300 DEBUG Double ln(NUMERIC arg)
2023-10-05T15:13:36.610+0300 DEBUG LocalDate local date
2023-10-05T15:13:36.610+0300 DEBUG LocalDateTime local datetime
2023-10-05T15:13:36.611+0300 DEBUG LocalTime local time
2023-10-05T15:13:36.611+0300 DEBUG LocalDate local_date
2023-10-05T15:13:36.611+0300 DEBUG LocalDateTime local_datetime
2023-10-05T15:13:36.611+0300 DEBUG LocalTime local_time
2023-10-05T15:13:36.611+0300 DEBUG Time localtime
2023-10-05T15:13:36.611+0300 DEBUG Timestamp localtimestamp
2023-10-05T15:13:36.611+0300 DEBUG Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-10-05T15:13:36.612+0300 DEBUG Double log(NUMERIC arg0[, NUMERIC arg1])
2023-10-05T15:13:36.612+0300 DEBUG Double log10(NUMERIC arg)
2023-10-05T15:13:36.612+0300 DEBUG String lower(STRING string)
2023-10-05T15:13:36.612+0300 DEBUG String lpad(STRING string, INTEGER length[, STRING padding])
2023-10-05T15:13:36.613+0300 DEBUG String ltrim(STRING string[, STRING characters])
2023-10-05T15:13:36.613+0300 DEBUG Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2023-10-05T15:13:36.613+0300 DEBUG Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2023-10-05T15:13:36.614+0300 DEBUG Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2023-10-05T15:13:36.614+0300 DEBUG Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2023-10-05T15:13:36.614+0300 DEBUG max(COMPARABLE arg)
2023-10-05T15:13:36.614+0300 DEBUG String md5(arg)
2023-10-05T15:13:36.615+0300 DEBUG Double median(NUMERIC arg)
2023-10-05T15:13:36.615+0300 DEBUG min(COMPARABLE arg)
2023-10-05T15:13:36.615+0300 DEBUG Integer mod(INTEGER arg0, INTEGER arg1)
2023-10-05T15:13:36.615+0300 DEBUG mode()
2023-10-05T15:13:36.615+0300 DEBUG nth_valueANY value, INTEGER nth
2023-10-05T15:13:36.615+0300 DEBUG nullif(arg0, arg1)
2023-10-05T15:13:36.616+0300 DEBUG Integer octet_length(STRING_OR_CLOB arg)
2023-10-05T15:13:36.616+0300 DEBUG OffsetDateTime offset datetime
2023-10-05T15:13:36.616+0300 DEBUG OffsetDateTime offset_datetime
2023-10-05T15:13:36.616+0300 DEBUG String overlay(string placing replacement from start[ for length])
2023-10-05T15:13:36.616+0300 DEBUG String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-10-05T15:13:36.616+0300 DEBUG Double percent_rank([arg0[, ...]])
2023-10-05T15:13:36.617+0300 DEBUG percentile_cont(NUMERIC arg)
2023-10-05T15:13:36.617+0300 DEBUG percentile_disc(NUMERIC arg)
2023-10-05T15:13:36.617+0300 DEBUG Double pi
2023-10-05T15:13:36.617+0300 DEBUG Integer position(STRING pattern in STRING string)
2023-10-05T15:13:36.617+0300 DEBUG Double power(NUMERIC arg0, NUMERIC arg1)
2023-10-05T15:13:36.617+0300 DEBUG Double radians(NUMERIC arg)
2023-10-05T15:13:36.617+0300 DEBUG Long rank([arg0[, ...]])
2023-10-05T15:13:36.618+0300 DEBUG Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2023-10-05T15:13:36.618+0300 DEBUG Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2023-10-05T15:13:36.618+0300 DEBUG Double regr_count(NUMERIC arg0, NUMERIC arg1)
2023-10-05T15:13:36.618+0300 DEBUG Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2023-10-05T15:13:36.618+0300 DEBUG Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2023-10-05T15:13:36.618+0300 DEBUG Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2023-10-05T15:13:36.619+0300 DEBUG Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2023-10-05T15:13:36.619+0300 DEBUG Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2023-10-05T15:13:36.619+0300 DEBUG Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2023-10-05T15:13:36.619+0300 DEBUG String repeat(STRING string, INTEGER times)
2023-10-05T15:13:36.620+0300 DEBUG String replace(STRING string, STRING pattern, STRING replacement)
2023-10-05T15:13:36.620+0300 DEBUG String right(STRING string, INTEGER length)
2023-10-05T15:13:36.620+0300 DEBUG round(NUMERIC number[, INTEGER places])
2023-10-05T15:13:36.620+0300 DEBUG Long row_number()
2023-10-05T15:13:36.620+0300 DEBUG String rpad(STRING string, INTEGER length[, STRING padding])
2023-10-05T15:13:36.620+0300 DEBUG String rtrim(STRING string[, STRING characters])
2023-10-05T15:13:36.621+0300 DEBUG Integer sign(NUMERIC arg)
2023-10-05T15:13:36.621+0300 DEBUG Double sin(NUMERIC arg)
2023-10-05T15:13:36.621+0300 DEBUG Double sinh(NUMERIC arg)
2023-10-05T15:13:36.621+0300 DEBUG String soundex(arg)
2023-10-05T15:13:36.621+0300 DEBUG Object sql
2023-10-05T15:13:36.621+0300 DEBUG Double sqrt(NUMERIC arg)
2023-10-05T15:13:36.622+0300 DEBUG Double stddev(NUMERIC arg)
2023-10-05T15:13:36.622+0300 DEBUG Double stddev_pop(NUMERIC arg)
2023-10-05T15:13:36.622+0300 DEBUG Double stddev_samp(NUMERIC arg)
2023-10-05T15:13:36.622+0300 DEBUG String str(arg)
2023-10-05T15:13:36.622+0300 DEBUG String substr(STRING string, INTEGER start[, INTEGER length])
2023-10-05T15:13:36.622+0300 DEBUG String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-10-05T15:13:36.622+0300 DEBUG sum(arg)
2023-10-05T15:13:36.623+0300 DEBUG Double tan(NUMERIC arg)
2023-10-05T15:13:36.623+0300 DEBUG Double tanh(NUMERIC arg)
2023-10-05T15:13:36.623+0300 DEBUG timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-10-05T15:13:36.623+0300 DEBUG basicType@5(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-10-05T15:13:36.623+0300 DEBUG String to_char(ANY arg0[, STRING arg1, STRING arg2])
2023-10-05T15:13:36.623+0300 DEBUG Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2023-10-05T15:13:36.624+0300 DEBUG Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2023-10-05T15:13:36.624+0300 DEBUG Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2023-10-05T15:13:36.624+0300 DEBUG String translate(STRING arg0, STRING arg1, STRING arg2)
2023-10-05T15:13:36.624+0300 DEBUG String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-10-05T15:13:36.624+0300 DEBUG trunc( ... )
2023-10-05T15:13:36.624+0300 DEBUG truncate( ... )
2023-10-05T15:13:36.624+0300 DEBUG String upper(STRING string)
2023-10-05T15:13:36.625+0300 DEBUG Double var_pop(NUMERIC arg)
2023-10-05T15:13:36.625+0300 DEBUG Double var_samp(NUMERIC arg)
2023-10-05T15:13:36.625+0300 DEBUG Double variance(NUMERIC arg)
2023-10-05T15:13:36.636+0300 DEBUG Starting QueryPlanCache(2048)
2023-10-05T15:13:36.842+0300 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-10-05T15:13:36.847+0300 DEBUG Configured EntityCopyObserver strategy: disallow
2023-10-05T15:13:37.043+0300 DEBUG Not known whether passed class name [com.joe.restapi.entity.Department] is safe
2023-10-05T15:13:37.044+0300 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.joe.restapi.entity.Department
2023-10-05T15:13:37.583+0300 DEBUG HHH000513: Unable to create the ReflectionOptimizer for [com.joe.restapi.entity.Department]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [departmentAddress]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:510)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:321)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:271)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:444)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1817)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1158)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1309)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1298)
	at com.joe.restapi.RestApiApplication.main(RestApiApplication.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2023-10-05T15:13:37.702+0300 DEBUG Starting post-init callbacks
2023-10-05T15:13:37.703+0300 DEBUG Starting PostInitCallbackEntry : Entity(com.joe.restapi.entity.Department) `staticFetchableList` generator
2023-10-05T15:13:37.704+0300 DEBUG Starting PostInitCallbackEntry : Entity(com.joe.restapi.entity.Department) `sqmMultiTableInsertStrategy` interpretation
2023-10-05T15:13:37.900+0300 DEBUG Static SQL for entity: com.joe.restapi.entity.Department
2023-10-05T15:13:37.901+0300 DEBUG  Version select: select id from department_restapi_tbl where id=?
2023-10-05T15:13:37.902+0300 DEBUG  Insert (0): insert into department_restapi_tbl (department_address,department_code,department_name,id) values (?,?,?,?)
2023-10-05T15:13:37.903+0300 DEBUG  Update (0): update department_restapi_tbl set department_address=?,department_code=?,department_name=? where id=?
2023-10-05T15:13:37.906+0300 DEBUG  Delete (0): delete from department_restapi_tbl where id=?
2023-10-05T15:13:37.955+0300 DEBUG Created new SQL alias : d1_0
2023-10-05T15:13:37.963+0300 DEBUG Registration of TableGroup [StandardTableGroup(com.joe.restapi.entity.Department)] with identifierForTableGroup [com.joe.restapi.entity.Department] for NavigablePath [com.joe.restapi.entity.Department] 
2023-10-05T15:13:38.001+0300 DEBUG DomainResult Graph:
 \-EntityResultImpl [com.joe.restapi.entity.Department]
 |  +-BasicFetch [com.joe.restapi.entity.Department.departmentAddress]
 |  +-BasicFetch [com.joe.restapi.entity.Department.departmentCode]
 |  \-BasicFetch [com.joe.restapi.entity.Department.departmentName]

2023-10-05T15:13:38.009+0300 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (d1 : com.joe.restapi.entity.Department) {
          primaryTableReference : department_restapi_tbl as d1_0
        }
      }
    }

2023-10-05T15:13:38.099+0300 INFO HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-10-05T15:13:38.100+0300 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@75ba8722] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7862f7cf]
2023-10-05T15:13:38.103+0300 DEBUG Checking 0 named HQL queries
2023-10-05T15:13:38.103+0300 DEBUG Checking 0 named SQL queries
2023-10-05T15:13:38.213+0300 DEBUG No alter strings for table : department_restapi_tbl
2023-10-05T15:13:38.218+0300 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5b0932a9
2023-10-05T15:13:38.218+0300 DEBUG Registering SessionFactory: 5e25a668-0ea4-44d3-ae94-f10e9471c842 (<unnamed>)
2023-10-05T15:13:38.218+0300 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-10-05T15:13:38.218+0300 DEBUG Instantiated SessionFactory
2023-10-05T15:13:38.614+0300 DEBUG Statistics initialized [enabled=false]
2023-10-05T15:13:39.104+0300 DEBUG JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:310)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1021)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:899)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy4/jdk.proxy4.$Proxy132.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:141)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1817)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:942)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1309)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1298)
	at com.joe.restapi.RestApiApplication.main(RestApiApplication.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2023-10-05T15:13:39.269+0300 DEBUG JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:310)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1021)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:899)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy4/jdk.proxy4.$Proxy132.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:141)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1817)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:942)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1309)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1298)
	at com.joe.restapi.RestApiApplication.main(RestApiApplication.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2023-10-05T15:13:39.559+0300 DEBUG Loaded expression factory via original TCCL
2023-10-05T15:13:39.565+0300 DEBUG Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2023-10-05T15:13:39.566+0300 DEBUG Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2023-10-05T15:13:39.571+0300 DEBUG Trying to load META-INF/validation.xml for XML based Validator configuration.
2023-10-05T15:13:39.572+0300 DEBUG Trying to load META-INF/validation.xml via user class loader
2023-10-05T15:13:39.572+0300 DEBUG Trying to load META-INF/validation.xml via TCCL
2023-10-05T15:13:39.573+0300 DEBUG Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2023-10-05T15:13:39.573+0300 DEBUG No META-INF/validation.xml found. Using annotation based configuration only.
2023-10-05T15:13:39.573+0300 DEBUG Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2023-10-05T15:13:39.573+0300 DEBUG Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2023-10-05T15:13:39.578+0300 DEBUG HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2023-10-05T15:13:39.579+0300 DEBUG HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2023-10-05T15:13:39.580+0300 DEBUG HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2023-10-05T15:13:39.580+0300 DEBUG HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2023-10-05T15:13:39.580+0300 DEBUG HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2023-10-05T15:13:39.581+0300 DEBUG HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2023-10-05T15:18:27.221+0300 DEBUG HHH000031: Closing
2023-10-05T15:18:27.223+0300 DEBUG Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@93b75b3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7862f7cf]
2023-10-05T15:18:27.224+0300 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-10-05T15:18:27.226+0300 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
